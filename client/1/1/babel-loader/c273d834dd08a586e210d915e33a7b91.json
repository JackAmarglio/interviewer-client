{"ast":null,"code":"var _jsxFileName = \"G:\\\\ReactEvents_old\\\\client\\\\src\\\\pages\\\\layout\\\\HeaderBar.js\",\n    _s = $RefreshSig$();\n\nimport { connect } from \"react-redux\";\nimport * as React from 'react';\nimport { Toolbar, AppBar, Box, Typography, Button, Avatar, Menu, MenuItem } from \"@mui/material\";\nimport { deleteUserInfo, getUserInfo, LogOut } from \"../../utils/auth\";\nimport { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\"; // import LoadingIndicator from \"../../components/LoadingIndicator\";\n\nimport { toast } from \"react-toastify\";\nimport { faHome } from \"@fortawesome/free-solid-svg-icons\"; // import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction HeaderBar(props) {\n  _s();\n\n  const {\n    loggedIn,\n    dispatch\n  } = props;\n  const history = useHistory();\n  const [info, setInfo] = useState({\n    firstName: \"\",\n    lastName: \"\"\n  });\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleLogout = function () {\n    dispatch(LogOut());\n  };\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const gotoProfile = () => {\n    history.push('/profile');\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const clickHomeButton = () => {\n    history.push('/');\n  };\n\n  const handleSubmit = function (event) {\n    //  alert(\"sf\");\n    event.preventDefault();\n    setIsLoading(true);\n    dispatch(deleteUserInfo(err => {\n      setIsLoading(false);\n\n      if (err) {\n        toast(err, {\n          type: \"error\"\n        });\n        return;\n      }\n\n      toast(\"Successfully deleted\", {\n        type: \"success\"\n      });\n      return;\n    }));\n  };\n\n  useEffect(() => {\n    if (loggedIn) {\n      dispatch(getUserInfo(userInfo => {\n        setInfo({\n          firstName: userInfo.firstName,\n          lastName: userInfo.lastName\n        });\n      }));\n    }\n  }, []);\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popover' : undefined;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      flexGrow: 1\n    },\n    children: /*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      color: \"secondary\",\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          width: 2,\n          height: 80,\n          style: {\n            backgroundColor: 'white'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          component: \"div\",\n          sx: {\n            flexGrow: 1\n          },\n          children: \"React Events\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), loggedIn == false && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            color: \"inherit\",\n            href: \"/signin\",\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"inherit\",\n            href: \"/usertype\",\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            component: \"form\",\n            noValidate: true,\n            onSubmit: handleSubmit,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              color: \"inherit\",\n              type: \"submit\",\n              children: \"Delete User\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true), loggedIn == true && /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            id: \"basic-button\",\n            \"aria-controls\": open ? 'basic-menu' : undefined,\n            \"aria-haspopup\": \"true\",\n            \"aria-expanded\": open ? 'true' : undefined,\n            onClick: handleClick,\n            children: [info.firstName, \" \", info.lastName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Menu, {\n            id: \"basic-menu\",\n            anchorEl: anchorEl,\n            open: open,\n            onClose: handleClose,\n            MenuListProps: {\n              'aria-labelledby': 'basic-button'\n            },\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              onClick: gotoProfile,\n              children: \"My account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              onClick: handleLogout,\n              children: \"Logout\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n\n_s(HeaderBar, \"ljdLAqtPoWvf0gGcuj1USXzpkpo=\", false, function () {\n  return [useHistory];\n});\n\n_c = HeaderBar;\n\nfunction mapStateToProps(state) {\n  const {\n    loggedIn\n  } = state;\n  return {\n    loggedIn: loggedIn\n  };\n}\n\nconst ConnectedHeaderBar = connect(mapStateToProps)(HeaderBar);\nexport { ConnectedHeaderBar as HeaderBar };\n\nvar _c;\n\n$RefreshReg$(_c, \"HeaderBar\");","map":{"version":3,"sources":["G:/ReactEvents_old/client/src/pages/layout/HeaderBar.js"],"names":["connect","React","Toolbar","AppBar","Box","Typography","Button","Avatar","Menu","MenuItem","deleteUserInfo","getUserInfo","LogOut","useEffect","useState","useHistory","toast","faHome","HeaderBar","props","loggedIn","dispatch","history","info","setInfo","firstName","lastName","isLoading","setIsLoading","handleLogout","anchorEl","setAnchorEl","handleClick","event","currentTarget","gotoProfile","push","handleClose","clickHomeButton","handleSubmit","preventDefault","err","type","userInfo","open","Boolean","id","undefined","flexGrow","backgroundColor","mapStateToProps","state","ConnectedHeaderBar"],"mappings":"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","sourcesContent":["import { connect } from \"react-redux\";\r\nimport * as React from 'react';\r\nimport { Toolbar, AppBar, Box, Typography, Button, Avatar, Menu, MenuItem } from \"@mui/material\";\r\nimport { deleteUserInfo, getUserInfo, LogOut } from \"../../utils/auth\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n// import LoadingIndicator from \"../../components/LoadingIndicator\";\r\nimport { toast } from \"react-toastify\";\r\nimport { faHome } from \"@fortawesome/free-solid-svg-icons\";\r\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nfunction HeaderBar(props) {\r\n    const { loggedIn, dispatch } = props;\r\n    const history = useHistory();\r\n    const [info, setInfo] = useState({\r\n        firstName: \"\",\r\n        lastName: \"\"\r\n    })\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const handleLogout = function () {\r\n        dispatch(LogOut());\r\n    };\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const gotoProfile = () => {\r\n        history.push('/profile')\r\n    }\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n    const clickHomeButton = () => {\r\n        history.push('/');\r\n    }\r\n    const handleSubmit = function (event) {\r\n        //  alert(\"sf\");\r\n        event.preventDefault();\r\n        setIsLoading(true);\r\n        dispatch(deleteUserInfo((err) => {\r\n            setIsLoading(false);\r\n            if (err) {\r\n                toast(err, {\r\n                    type: \"error\"\r\n                });\r\n                return;\r\n            }\r\n            toast(\"Successfully deleted\", {\r\n                type: \"success\"\r\n            });\r\n            return;\r\n        }));\r\n    };\r\n    useEffect(() => {\r\n        if (loggedIn) {\r\n            dispatch(getUserInfo((userInfo) => {\r\n                setInfo({ firstName: userInfo.firstName, lastName: userInfo.lastName })\r\n            }));\r\n        }\r\n    }, [])\r\n\r\n    const open = Boolean(anchorEl);\r\n    const id = open ? 'simple-popover' : undefined;\r\n    return (\r\n        <Box sx={{ flexGrow: 1 }}>\r\n            {/* {isLoading && <LoadingIndicator />} */}\r\n            <AppBar position=\"static\" color=\"secondary\">\r\n                <Toolbar>\r\n                    {/* <FontAwesomeIcon onClick={clickHomeButton} icon={faHome} size=\"5x\" style={{ marginLeft: 0, marginRight: 20, backgroundColor: \"transparent\" }} /> */}\r\n                    <Box width={2} height={80} style={{ backgroundColor: 'white' }} />\r\n                    <Typography\r\n                        variant=\"h6\"\r\n                        component=\"div\"\r\n                        sx={{ flexGrow: 1 }}\r\n                    >\r\n                        React Events\r\n                    </Typography>\r\n                    {loggedIn == false && (\r\n                        <>\r\n                            <Button color=\"inherit\" href=\"/signin\">\r\n                                Sign In\r\n                            </Button>\r\n                            <Button color=\"inherit\" href=\"/usertype\">\r\n                                Sign Up\r\n                            </Button>\r\n                            <Box\r\n                                component=\"form\"\r\n                                noValidate\r\n                                onSubmit={handleSubmit}\r\n                            >\r\n                                <Button color=\"inherit\" type=\"submit\">\r\n                                    Delete User\r\n                                </Button>\r\n                            </Box>\r\n                        </>\r\n                    )}\r\n                    {loggedIn == true && (\r\n                        <React.Fragment>\r\n                            <Button\r\n                                id=\"basic-button\"\r\n                                aria-controls={open ? 'basic-menu' : undefined}\r\n                                aria-haspopup=\"true\"\r\n                                aria-expanded={open ? 'true' : undefined}\r\n                                onClick={handleClick}\r\n                            >\r\n                                {info.firstName} {info.lastName}\r\n                            </Button>\r\n                            <Menu\r\n                                id=\"basic-menu\"\r\n                                anchorEl={anchorEl}\r\n                                open={open}\r\n                                onClose={handleClose}\r\n                                MenuListProps={{\r\n                                    'aria-labelledby': 'basic-button',\r\n                                }}\r\n                            >\r\n                                <MenuItem onClick={gotoProfile}>My account</MenuItem>\r\n                                <MenuItem onClick={handleLogout}>Logout</MenuItem>\r\n                            </Menu>\r\n                        </React.Fragment>\r\n                    )}\r\n                </Toolbar>\r\n            </AppBar>\r\n        </Box>\r\n    );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const { loggedIn } = state;\r\n    return { loggedIn: loggedIn };\r\n}\r\n\r\nconst ConnectedHeaderBar = connect(mapStateToProps)(HeaderBar);\r\n\r\nexport { ConnectedHeaderBar as HeaderBar };\r\n"]},"metadata":{},"sourceType":"module"}