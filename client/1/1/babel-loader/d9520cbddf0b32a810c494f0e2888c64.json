{"ast":null,"code":"import axios from \"axios\";\nimport { API_URL, JWT_SECRET } from \"../env\";\nimport jwt_decode from \"jwt-decode\";\n\nfunction _axios() {\n  let bearToken = localStorage.getItem(\"eventBearerToken\");\n  return axios.create({\n    headers: {\n      'Authorization': `EventTracker ${bearToken}`\n    }\n  });\n}\n\nconst IsLoggedIn = () => {\n  return dispatch => {\n    try {\n      var userData = jwt_decode(localStorage.getItem(\"eventBearerToken\"));\n\n      if (userData.exp && Date.now() < userData.exp * 1000) {\n        //// token is valid token\n        console.log(\"logged in already\");\n        dispatch({\n          type: \"LOG_IN\"\n        });\n        dispatch({\n          type: \"EMAIL_CONFIRMED\",\n          payload: userData.emailConfirmed\n        });\n      } else {\n        dispatch({\n          type: \"LOG_OUT\"\n        });\n      }\n    } catch (e) {\n      console.log(e);\n      dispatch({\n        type: \"LOG_OUT\"\n      });\n    }\n  };\n};\n\n_c = IsLoggedIn;\n\nconst LogIn = (data, callback) => {\n  return function (dispatch) {\n    const options = {\n      url: `${API_URL}/auth/login`,\n      method: \"POST\",\n      data: data\n    };\n\n    _axios()(options).then(resp => {\n      localStorage.setItem(\"eventBearerToken\", resp.data.token);\n      dispatch({\n        type: \"LOG_IN\"\n      });\n      dispatch({\n        type: \"EMAIL_CONFIRMED\",\n        payload: resp.emailConfirmed\n      });\n      callback && callback();\n    }).catch(err => {\n      callback && callback(err.response.data.msg);\n    });\n  };\n};\n\n_c2 = LogIn;\n\nconst Register = (data, callback) => {\n  return function (dispatch) {\n    const options = {\n      url: `${API_URL}/auth`,\n      method: \"POST\",\n      data: data\n    };\n\n    _axios()(options).then(resp => {\n      localStorage.setItem(\"eventBearerToken\", resp.data.token);\n      dispatch({\n        type: \"LOG_IN\"\n      });\n    }).catch(err => {\n      callback && callback(err.response.data.msg);\n    }).finally(() => {// callback && callback();\n    });\n  };\n};\n\n_c3 = Register;\n\nconst LogOut = () => {\n  return dispatch => {\n    const options = {\n      url: `${API_URL}/auth/logout`,\n      method: \"GET\"\n    };\n\n    _axios()(options).then(() => {\n      localStorage.removeItem(\"eventBearerToken\");\n      dispatch({\n        type: \"LOG_OUT\"\n      });\n    }).catch(console.error);\n  };\n};\n\n_c4 = LogOut;\n\nconst SendVerifyEmail = callback => {\n  return dispatch => {\n    const options = {\n      url: `${API_URL}/auth/sendVerifyEmail`,\n      method: \"GET\"\n    };\n\n    _axios()(options).then(resp => {\n      if (resp.data.status == 1) {\n        callback && callback(1);\n      } else if (resp.data.status == 2) {\n        callback && callback(2);\n      } else callback && callback(3);\n    }).catch(err => {\n      callback && callback(0, err);\n    });\n  };\n};\n\n_c5 = SendVerifyEmail;\n\nconst VerifyEmail = (search, callback) => {\n  return dispatch => {\n    const options = {\n      url: `${API_URL}/auth/verifyEmail${search}`,\n      method: \"GET\"\n    };\n\n    _axios()(options).then(resp => {\n      console.log(resp);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n};\n\n_c6 = VerifyEmail;\nexport { IsLoggedIn, LogIn, Register, LogOut, SendVerifyEmail, VerifyEmail };\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"IsLoggedIn\");\n$RefreshReg$(_c2, \"LogIn\");\n$RefreshReg$(_c3, \"Register\");\n$RefreshReg$(_c4, \"LogOut\");\n$RefreshReg$(_c5, \"SendVerifyEmail\");\n$RefreshReg$(_c6, \"VerifyEmail\");","map":{"version":3,"sources":["G:/projects/2022/2022-1/2022-1-18-Jo/ReactEvents(npm-installed)/client/src/utils/auth.js"],"names":["axios","API_URL","JWT_SECRET","jwt_decode","_axios","bearToken","localStorage","getItem","create","headers","IsLoggedIn","dispatch","userData","exp","Date","now","console","log","type","payload","emailConfirmed","e","LogIn","data","callback","options","url","method","then","resp","setItem","token","catch","err","response","msg","Register","finally","LogOut","removeItem","error","SendVerifyEmail","status","VerifyEmail","search"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport {API_URL,JWT_SECRET} from \"../env\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nfunction _axios(){\r\n    let bearToken = localStorage.getItem(\"eventBearerToken\")\r\n    return axios.create({\r\n         headers: {'Authorization': `EventTracker ${bearToken}`}\r\n     });\r\n}\r\nconst IsLoggedIn = () => {\r\n    return (dispatch) => {\r\n        try {\r\n            var userData = jwt_decode(localStorage.getItem(\"eventBearerToken\"));\r\n\r\n            if(userData.exp && Date.now() < userData.exp * 1000 ){\r\n                //// token is valid token\r\n                console.log(\"logged in already\")\r\n                dispatch({ type: \"LOG_IN\"});\r\n                dispatch({ type: \"EMAIL_CONFIRMED\" , payload: userData.emailConfirmed });\r\n            } else {\r\n                dispatch({ type:\"LOG_OUT\" });\r\n            }\r\n        } catch (e){\r\n            console.log(e)\r\n            dispatch({ type:\"LOG_OUT\" });\r\n        }\r\n\r\n\r\n    };\r\n};\r\nconst LogIn = (data, callback) => {\r\n    return function (dispatch) {\r\n        const options = {\r\n            url: `${API_URL}/auth/login`,\r\n            method: \"POST\",\r\n            data: data\r\n        };\r\n        _axios()(options)\r\n            .then((resp) => {\r\n                localStorage.setItem(\"eventBearerToken\",resp.data.token);\r\n                dispatch({ type: \"LOG_IN\" });\r\n                dispatch({ type: \"EMAIL_CONFIRMED\", payload: resp.emailConfirmed });\r\n                callback && callback();\r\n            })\r\n            .catch(err=>{\r\n                callback && callback(err.response.data.msg);\r\n            });\r\n    };\r\n};\r\n\r\nconst Register = (data, callback) => {\r\n    return function (dispatch) {\r\n        const options = {\r\n            url: `${API_URL}/auth`,\r\n            method: \"POST\",\r\n            data: data\r\n        };\r\n        _axios()(options)\r\n            .then((resp) => {\r\n                localStorage.setItem(\"eventBearerToken\",resp.data.token);\r\n                dispatch({ type: \"LOG_IN\" });\r\n            })\r\n            .catch(err=>{\r\n                callback && callback(err.response.data.msg);\r\n            }).finally(() => {\r\n                // callback && callback();\r\n            });\r\n    };\r\n};\r\n\r\nconst LogOut = () => {\r\n    return (dispatch) => {\r\n        const options = {\r\n            url: `${API_URL}/auth/logout`,\r\n            method: \"GET\"\r\n        };\r\n        _axios()(options)\r\n            .then(() => {\r\n                localStorage.removeItem(\"eventBearerToken\")\r\n                dispatch({ type: \"LOG_OUT\" });\r\n            })\r\n            .catch(console.error);\r\n    };\r\n};\r\n\r\nconst SendVerifyEmail = (callback) => {\r\n    return (dispatch) => {\r\n        const options = {\r\n            url: `${API_URL}/auth/sendVerifyEmail`,\r\n            method: \"GET\"\r\n        };\r\n        _axios()(options).then((resp) => {\r\n\r\n            if(resp.data.status == 1){\r\n                callback && callback(1);\r\n            }\r\n            else if(resp.data.status == 2){\r\n                callback && callback(2);\r\n            } else callback && callback(3);\r\n        }).catch(err=>{\r\n            callback && callback(0,err);\r\n        })\r\n    };\r\n};\r\nconst VerifyEmail = (search,callback) => {\r\n    return (dispatch) => {\r\n        const options = {\r\n            url: `${API_URL}/auth/verifyEmail${search}`,\r\n            method: \"GET\"\r\n        };\r\n        _axios()(options).then((resp) => {\r\n             console.log(resp)\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    };\r\n};\r\n\r\nexport { IsLoggedIn, LogIn, Register, LogOut, SendVerifyEmail,VerifyEmail };\r\n"]},"metadata":{},"sourceType":"module"}