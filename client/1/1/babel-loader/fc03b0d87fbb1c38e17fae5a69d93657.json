{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactEvents(npm-installed)\\\\client\\\\src\\\\components\\\\Header.js\",\n    _s = $RefreshSig$();\n\nimport { connect } from \"react-redux\";\nimport * as React from 'react';\nimport { Toolbar, AppBar, Box, Typography, Button, Avatar } from \"@mui/material\";\nimport { LogOut } from \"../utils/auth\";\nimport Popover from '@mui/material/Popover';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction HeaderBar(props) {\n  _s();\n\n  const {\n    loggedIn,\n    dispatch\n  } = props;\n\n  const handleLogout = function () {\n    dispatch(LogOut());\n  };\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popover' : undefined;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      flexGrow: 1\n    },\n    children: /*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      color: \"secondary\",\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          component: \"div\",\n          sx: {\n            flexGrow: 1\n          },\n          children: \"React Events\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this), loggedIn === false && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            color: \"inherit\",\n            href: \"/signin\",\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"inherit\",\n            href: \"/usertype\",\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true), loggedIn === true &&\n        /*#__PURE__*/\n\n        /*<Button color=\"inherit\" onClick={handleLogout}>\r\n            Log Out\r\n        </Button>*/\n        _jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            \"aria-describedby\": id,\n            variant: \"contained\",\n            onClick: handleClick,\n            children: \"ME\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Popover, {\n            id: id,\n            open: open,\n            anchorEl: anchorEl,\n            onClose: handleClose,\n            anchorOrigin: {\n              vertical: 'bottom',\n              horizontal: 'left'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              children: \"edit profile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              children: \"logout\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n\n_s(HeaderBar, \"+aMDa7FPcESUyQDF1vq0RSMn4/k=\");\n\n_c = HeaderBar;\n\nfunction mapStateToProps(state) {\n  const {\n    loggedIn\n  } = state;\n  return {\n    loggedIn: loggedIn\n  };\n}\n\nconst ConnectedHeaderBar = connect(mapStateToProps)(HeaderBar);\nexport { ConnectedHeaderBar as HeaderBar };\n\nvar _c;\n\n$RefreshReg$(_c, \"HeaderBar\");","map":{"version":3,"sources":["D:/ReactEvents(npm-installed)/client/src/components/Header.js"],"names":["connect","React","Toolbar","AppBar","Box","Typography","Button","Avatar","LogOut","Popover","HeaderBar","props","loggedIn","dispatch","handleLogout","anchorEl","setAnchorEl","useState","handleClick","event","currentTarget","handleClose","open","Boolean","id","undefined","flexGrow","vertical","horizontal","mapStateToProps","state","ConnectedHeaderBar"],"mappings":";;;AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,OAAT,EAAkBC,MAAlB,EAA0BC,GAA1B,EAA+BC,UAA/B,EAA2CC,MAA3C,EAAmDC,MAAnD,QAAiE,eAAjE;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,OAAOC,OAAP,MAAoB,uBAApB;;;;AACA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACtB,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAyBF,KAA/B;;AAEA,QAAMG,YAAY,GAAG,YAAY;AAC7BD,IAAAA,QAAQ,CAACL,MAAM,EAAP,CAAR;AACH,GAFD;;AAIA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0Bf,KAAK,CAACgB,QAAN,CAAe,IAAf,CAAhC;;AAEA,QAAMC,WAAW,GAAIC,KAAD,IAAW;AAC7BH,IAAAA,WAAW,CAACG,KAAK,CAACC,aAAP,CAAX;AACD,GAFD;;AAIA,QAAMC,WAAW,GAAG,MAAM;AACxBL,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAFD;;AAIA,QAAMM,IAAI,GAAGC,OAAO,CAACR,QAAD,CAApB;AACA,QAAMS,EAAE,GAAGF,IAAI,GAAG,gBAAH,GAAsBG,SAArC;AACA,sBACI,QAAC,GAAD;AAAK,IAAA,EAAE,EAAE;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAT;AAAA,2BACI,QAAC,MAAD;AAAQ,MAAA,QAAQ,EAAC,QAAjB;AAA0B,MAAA,KAAK,EAAC,WAAhC;AAAA,6BACI,QAAC,OAAD;AAAA,gCACI,QAAC,UAAD;AACI,UAAA,OAAO,EAAC,IADZ;AAEI,UAAA,SAAS,EAAC,KAFd;AAGI,UAAA,EAAE,EAAE;AAAEA,YAAAA,QAAQ,EAAE;AAAZ,WAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAQKd,QAAQ,KAAK,KAAb,iBACG;AAAA,kCACI,QAAC,MAAD;AAAQ,YAAA,KAAK,EAAC,SAAd;AAAwB,YAAA,IAAI,EAAC,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII,QAAC,MAAD;AAAQ,YAAA,KAAK,EAAC,SAAd;AAAwB,YAAA,IAAI,EAAC,WAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA,wBATR,EAkBKA,QAAQ,KAAK,IAAb;AAAA;;AACG;AACxB;AACA;AACyB,gBAAC,KAAD,CAAO,QAAP;AAAA,kCACO,QAAC,MAAD;AAAQ,gCAAkBY,EAA1B;AAA8B,YAAA,OAAO,EAAC,WAAtC;AAAkD,YAAA,OAAO,EAAEN,WAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADP,eAIO,QAAC,OAAD;AACI,YAAA,EAAE,EAAEM,EADR;AAEI,YAAA,IAAI,EAAEF,IAFV;AAGI,YAAA,QAAQ,EAAEP,QAHd;AAII,YAAA,OAAO,EAAEM,WAJb;AAKI,YAAA,YAAY,EAAE;AACdM,cAAAA,QAAQ,EAAE,QADI;AAEdC,cAAAA,UAAU,EAAE;AAFE,aALlB;AAAA,oCAWQ,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAXR,eAYQ,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAZR;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJP;AAAA;AAAA;AAAA;AAAA;AAAA,gBAtBT;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAkDH;;GArEQlB,S;;KAAAA,S;;AAuET,SAASmB,eAAT,CAAyBC,KAAzB,EAAgC;AAC5B,QAAM;AAAElB,IAAAA;AAAF,MAAekB,KAArB;AACA,SAAO;AAAElB,IAAAA,QAAQ,EAAEA;AAAZ,GAAP;AACH;;AAED,MAAMmB,kBAAkB,GAAG/B,OAAO,CAAC6B,eAAD,CAAP,CAAyBnB,SAAzB,CAA3B;AAEA,SAASqB,kBAAkB,IAAIrB,SAA/B","sourcesContent":["import { connect } from \"react-redux\";\r\nimport * as React from 'react';\r\nimport { Toolbar, AppBar, Box, Typography, Button, Avatar } from \"@mui/material\";\r\nimport { LogOut } from \"../utils/auth\";\r\nimport Popover from '@mui/material/Popover';\r\nfunction HeaderBar(props) {\r\n    const { loggedIn, dispatch } = props;\r\n\r\n    const handleLogout = function () {\r\n        dispatch(LogOut());\r\n    };\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n    const handleClick = (event) => {\r\n      setAnchorEl(event.currentTarget);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setAnchorEl(null);\r\n    };\r\n  \r\n    const open = Boolean(anchorEl);\r\n    const id = open ? 'simple-popover' : undefined;\r\n    return (\r\n        <Box sx={{ flexGrow: 1 }}>\r\n            <AppBar position=\"static\" color=\"secondary\">\r\n                <Toolbar>\r\n                    <Typography\r\n                        variant=\"h6\"\r\n                        component=\"div\"\r\n                        sx={{ flexGrow: 1 }}\r\n                    >\r\n                        React Events\r\n                    </Typography>\r\n                    {loggedIn === false && (\r\n                        <>\r\n                            <Button color=\"inherit\" href=\"/signin\">\r\n                                Sign In\r\n                            </Button>\r\n                            <Button color=\"inherit\" href=\"/usertype\">\r\n                                Sign Up\r\n                            </Button>\r\n                        </>\r\n                    )}\r\n                    {loggedIn === true && (\r\n                        /*<Button color=\"inherit\" onClick={handleLogout}>\r\n                            Log Out\r\n                        </Button>*/\r\n                         <React.Fragment>\r\n                                <Button aria-describedby={id} variant=\"contained\" onClick={handleClick}>\r\n                                    ME\r\n                                </Button>\r\n                                <Popover\r\n                                    id={id}\r\n                                    open={open}\r\n                                    anchorEl={anchorEl}\r\n                                    onClose={handleClose}\r\n                                    anchorOrigin={{\r\n                                    vertical: 'bottom',\r\n                                    horizontal: 'left',\r\n                                    }}\r\n                                >\r\n                                    \r\n                                        <Button>edit profile</Button>\r\n                                        <Button>logout</Button>\r\n                                    \r\n                                </Popover>\r\n                       </React.Fragment>\r\n                    )}\r\n                </Toolbar>\r\n            </AppBar>\r\n        </Box>\r\n    );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const { loggedIn } = state;\r\n    return { loggedIn: loggedIn };\r\n}\r\n\r\nconst ConnectedHeaderBar = connect(mapStateToProps)(HeaderBar);\r\n\r\nexport { ConnectedHeaderBar as HeaderBar };\r\n"]},"metadata":{},"sourceType":"module"}