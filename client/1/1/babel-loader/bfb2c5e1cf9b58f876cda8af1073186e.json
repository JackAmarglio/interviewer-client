{"ast":null,"code":"var _jsxFileName = \"G:\\\\ReactEvents_old\\\\client\\\\src\\\\pages\\\\auth\\\\EditProfile.js\",\n    _s = $RefreshSig$();\n\n/*\r\nadditional data:  about, address, website, contact\r\n*/\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport Link from \"@mui/material/Link\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport { connect } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport { HeaderBar } from \"../layout/HeaderBar\";\nimport { getUserInfo, updateUserInfo } from \"../../utils/auth\";\nimport { useHistory } from \"react-router-dom\";\nimport Usertype from \"../usertype\"; // import LoadingIndicator from \"../../components/LoadingIndicator\";\n\nimport { toast } from \"react-toastify\";\nimport * as isEmail from \"is-email\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst theme = createTheme();\n\nfunction EditProfile(props) {\n  _s();\n\n  const {\n    loggedIn,\n    dispatch\n  } = props;\n  const [state, setState] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmpassword: \"\",\n    companyInfo: \"\",\n    address: \"\",\n    website: \"\",\n    contact: \"\",\n    isUser: \"\"\n  });\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleSubmit = function (event) {\n    event.preventDefault();\n    setIsLoading(true);\n\n    if (!isEmail(state.email)) {\n      toast(\"Please Input Correct Email!\", {\n        type: \"warning\",\n        progress: undefined\n      });\n      return;\n    }\n\n    if (state.password != state.confirmpassword) {\n      toast(\"Password mismatch!\", {\n        type: \"warning\"\n      });\n      return;\n    }\n\n    if (!state.firstName) {\n      toast(state.isUser ? \"Please Input First Name\" : \"Please Input Organisation represtant!\", {\n        type: \"warning\",\n        progress: undefined\n      });\n      return;\n    }\n\n    if (state.isUser && !state.lastName) {\n      toast(\"Please Input Last Name!\", {\n        type: \"warning\",\n        progress: undefined\n      });\n      return;\n    }\n\n    if (!state.isUser && !state.companyInfo) {\n      toast(\"Please Input Organisation Name!\", {\n        type: \"warning\",\n        progress: undefined\n      });\n      return;\n    } // if(state.website && !isEmail(state.website)){\n    //     toast(\"Please Input Correct Website Email!\",{\n    //         type: \"warning\",\n    //         progress: undefined\n    //     });\n    //     return;\n    // }\n\n\n    if (!state.isUser && !state.contact) {\n      toast(\"Please Input Contact Email\", {\n        type: \"warning\",\n        progress: undefined\n      });\n      return;\n    }\n\n    if (!state.isUser && !isEmail(state.contact)) {\n      toast(\"Please Input Correct Format about Contact Email\", {\n        type: \"warning\",\n        progress: undefined\n      });\n      return;\n    }\n\n    if (!state.isUser && !state.address) {\n      toast(\"Please Input Organization Address\", {\n        type: \"warning\",\n        progress: undefined\n      });\n      return;\n    }\n\n    if (!state.password) {\n      toast(\"Please Input Password!\", {\n        type: \"warning\",\n        progress: undefined\n      });\n      return;\n    }\n\n    if (state.password != state.confirmpassword) {\n      toast(\"Password mismatch!\", {\n        type: \"warning\"\n      });\n      return;\n    }\n\n    dispatch(updateUserInfo({ ...state\n    }, err => {\n      setIsLoading(false);\n\n      if (err) {\n        toast(err, {\n          type: \"error\"\n        });\n        return;\n      }\n\n      toast(\"Successfully updated\", {\n        type: \"success\"\n      });\n      return;\n    }));\n  };\n\n  const handleChange = function (event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setState({ ...state,\n      [name]: value\n    });\n  };\n\n  useEffect(() => {\n    dispatch(getUserInfo(userInfo => {\n      setState({\n        firstName: userInfo.firstName,\n        lastName: userInfo.lastName,\n        email: userInfo.email,\n        password: \"\",\n        companyInfo: userInfo.companyInfo,\n        address: userInfo.address,\n        website: userInfo.website,\n        contact: userInfo.contact,\n        isUser: userInfo.isUser\n      });\n    }));\n  }, []);\n  const {\n    firstName,\n    lastName,\n    email,\n    password,\n    confirmpassword,\n    companyInfo,\n    address,\n    website,\n    contact\n  } = state;\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        flexGrow: 1,\n        overflowX: \"hidden\"\n      },\n      margin: \"1% 3%\",\n      children: [/*#__PURE__*/_jsxDEV(HeaderBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        component: \"main\",\n        maxWidth: \"xs\",\n        children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            marginTop: 8,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            sx: {\n              bgcolor: \"secondary.main\"\n            },\n            children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            component: \"h1\",\n            variant: \"h5\",\n            children: \"Edit Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            component: \"form\",\n            noValidate: true,\n            onSubmit: handleSubmit,\n            sx: {\n              mt: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 1,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: state.isUser ? 6 : 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  autoComplete: \"given-name\",\n                  name: \"firstName\",\n                  required: true,\n                  fullWidth: true,\n                  id: \"firstName\",\n                  label: state.isUser ? \"First Name\" : \"Organisation representant\",\n                  value: firstName,\n                  onChange: handleChange,\n                  autoFocus: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 33\n              }, this), state.isUser && /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 6,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  required: true,\n                  fullWidth: true,\n                  id: \"lastName\",\n                  label: \"Last Name\",\n                  name: \"lastName\",\n                  value: lastName,\n                  onChange: handleChange,\n                  autoComplete: \"family-name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 51\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  required: true,\n                  fullWidth: true,\n                  id: \"email\",\n                  label: \"Email Address\",\n                  name: \"email\",\n                  value: email,\n                  onChange: handleChange,\n                  autoComplete: \"email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  required: true,\n                  fullWidth: true,\n                  name: \"password\",\n                  label: \"Password\",\n                  type: \"password\",\n                  id: \"password\",\n                  value: password,\n                  onChange: handleChange,\n                  autoComplete: \"new-password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  required: true,\n                  fullWidth: true,\n                  name: \"confirmpassword\",\n                  label: \"Confirm Password\",\n                  type: \"password\",\n                  id: \"password\",\n                  value: confirmpassword,\n                  onChange: handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 33\n              }, this), !state.isUser && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    required: true,\n                    fullWidth: true,\n                    id: \"companyInfo\",\n                    label: \"Organisation Name\",\n                    name: \"companyInfo\",\n                    value: companyInfo,\n                    onChange: handleChange,\n                    autoComplete: \"companyInfo\",\n                    placeholder: \"ex:IT, Bank, Medical...\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 257,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    required: true,\n                    fullWidth: true,\n                    id: \"address\",\n                    label: \"Organisation Adress\",\n                    name: \"address\",\n                    value: address,\n                    onChange: handleChange,\n                    autoComplete: \"address\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 271,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    required: true,\n                    fullWidth: true,\n                    id: \"website\",\n                    label: \"Website\",\n                    name: \"website\",\n                    value: website,\n                    onChange: handleChange,\n                    autoComplete: \"website\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 283,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    required: true,\n                    fullWidth: true,\n                    id: \"contact\",\n                    label: \"Contact Email\",\n                    name: \"contact\",\n                    value: contact,\n                    onChange: handleChange,\n                    autoComplete: \"contact\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 295,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 294,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              fullWidth: true,\n              variant: \"contained\",\n              sx: {\n                mt: 3,\n                mb: 2\n              },\n              children: \"Update Profile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EditProfile, \"YhXGZzYfW+qONwJr0kkdn2HZb2Y=\");\n\n_c = EditProfile;\n\nfunction mapStateToProps(state) {\n  const {\n    loggedIn\n  } = state;\n  return {\n    loggedIn: loggedIn\n  };\n}\n\nconst ConnectedEditProfile = connect(mapStateToProps)(EditProfile);\nexport { ConnectedEditProfile as EditProfile };\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProfile\");","map":{"version":3,"sources":["G:/ReactEvents_old/client/src/pages/auth/EditProfile.js"],"names":["Avatar","Button","CssBaseline","TextField","Link","Grid","Box","LockOutlinedIcon","Typography","Container","createTheme","ThemeProvider","connect","useEffect","useState","HeaderBar","getUserInfo","updateUserInfo","useHistory","Usertype","toast","isEmail","theme","EditProfile","props","loggedIn","dispatch","state","setState","firstName","lastName","email","password","confirmpassword","companyInfo","address","website","contact","isUser","isLoading","setIsLoading","handleSubmit","event","preventDefault","type","progress","undefined","err","handleChange","name","value","target","userInfo","flexGrow","overflowX","marginTop","display","flexDirection","alignItems","bgcolor","mt","mb","mapStateToProps","ConnectedEditProfile"],"mappings":"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","sourcesContent":["/*\r\nadditional data:  about, address, website, contact\r\n*/\r\n\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Button from \"@mui/material/Button\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Link from \"@mui/material/Link\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Container from \"@mui/material/Container\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport { connect } from \"react-redux\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { HeaderBar } from \"../layout/HeaderBar\";\r\nimport { getUserInfo, updateUserInfo } from \"../../utils/auth\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Usertype from \"../usertype\";\r\n// import LoadingIndicator from \"../../components/LoadingIndicator\";\r\nimport { toast } from \"react-toastify\";\r\nimport * as isEmail from \"is-email\";\r\nconst theme = createTheme();\r\n\r\nfunction EditProfile(props) {\r\n    const { loggedIn, dispatch } = props;\r\n    const [state, setState] = useState({\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        confirmpassword: \"\",\r\n        companyInfo: \"\",\r\n        address: \"\",\r\n        website: \"\",\r\n        contact: \"\",\r\n        isUser: \"\"\r\n    });\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const handleSubmit = function (event) {\r\n        event.preventDefault();\r\n        setIsLoading(true);\r\n\r\n        if (!isEmail(state.email)) {\r\n            toast(\"Please Input Correct Email!\", {\r\n                type: \"warning\",\r\n                progress: undefined\r\n            });\r\n            return;\r\n        }\r\n        if (state.password != state.confirmpassword) {\r\n            toast(\"Password mismatch!\", {\r\n                type: \"warning\"\r\n            });\r\n            return;\r\n        }\r\n        if (!state.firstName) {\r\n            toast(state.isUser ? \"Please Input First Name\" : \"Please Input Organisation represtant!\", {\r\n                type: \"warning\",\r\n                progress: undefined\r\n            });\r\n            return;\r\n        }\r\n        if (state.isUser && !state.lastName) {\r\n            toast(\"Please Input Last Name!\", {\r\n                type: \"warning\",\r\n                progress: undefined\r\n            });\r\n            return;\r\n        }\r\n        if (!state.isUser && !state.companyInfo) {\r\n            toast(\"Please Input Organisation Name!\", {\r\n                type: \"warning\",\r\n                progress: undefined\r\n            });\r\n            return;\r\n        }\r\n        // if(state.website && !isEmail(state.website)){\r\n        //     toast(\"Please Input Correct Website Email!\",{\r\n        //         type: \"warning\",\r\n        //         progress: undefined\r\n        //     });\r\n        //     return;\r\n        // }\r\n\r\n        if (!state.isUser && !state.contact) {\r\n            toast(\"Please Input Contact Email\", {\r\n                type: \"warning\",\r\n                progress: undefined\r\n            });\r\n            return;\r\n        }\r\n        if (!state.isUser && !isEmail(state.contact)) {\r\n            toast(\"Please Input Correct Format about Contact Email\", {\r\n                type: \"warning\",\r\n                progress: undefined\r\n            });\r\n            return;\r\n        }\r\n        if (!state.isUser && !state.address) {\r\n            toast(\"Please Input Organization Address\", {\r\n                type: \"warning\",\r\n                progress: undefined\r\n            });\r\n            return;\r\n        }\r\n        if (!state.password) {\r\n            toast(\"Please Input Password!\", {\r\n                type: \"warning\",\r\n                progress: undefined\r\n            });\r\n            return;\r\n        }\r\n        if (state.password != state.confirmpassword) {\r\n            toast(\"Password mismatch!\", {\r\n                type: \"warning\"\r\n            });\r\n            return;\r\n        }\r\n\r\n        dispatch(updateUserInfo({ ...state }, (err) => {\r\n            setIsLoading(false);\r\n\r\n            if (err) {\r\n                toast(err, {\r\n                    type: \"error\"\r\n                });\r\n                return;\r\n            }\r\n            toast(\"Successfully updated\", {\r\n                type: \"success\"\r\n            });\r\n            return;\r\n        }));\r\n    };\r\n\r\n    const handleChange = function (event) {\r\n        const { name, value } = event.target;\r\n        setState({ ...state, [name]: value });\r\n    };\r\n\r\n    useEffect(() => {\r\n        dispatch(getUserInfo((userInfo) => {\r\n            setState({\r\n                firstName: userInfo.firstName,\r\n                lastName: userInfo.lastName,\r\n                email: userInfo.email,\r\n                password: \"\",\r\n                companyInfo: userInfo.companyInfo,\r\n                address: userInfo.address,\r\n                website: userInfo.website,\r\n                contact: userInfo.contact,\r\n                isUser: userInfo.isUser\r\n            });\r\n        }));\r\n\r\n    }, [])\r\n\r\n    const { firstName, lastName, email, password, confirmpassword, companyInfo, address, website, contact } = state;\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            {/* {isLoading && <LoadingIndicator />} */}\r\n            <Box sx={{ flexGrow: 1, overflowX: \"hidden\" }} margin=\"1% 3%\">\r\n                <HeaderBar />\r\n                <Container component=\"main\" maxWidth=\"xs\">\r\n                    <CssBaseline />\r\n                    <Box\r\n                        sx={{\r\n                            marginTop: 8,\r\n                            display: \"flex\",\r\n                            flexDirection: \"column\",\r\n                            alignItems: \"center\"\r\n                        }}\r\n                    >\r\n                        <Avatar sx={{ bgcolor: \"secondary.main\" }}>\r\n                            <LockOutlinedIcon />\r\n                        </Avatar>\r\n                        <Typography component=\"h1\" variant=\"h5\">\r\n                            Edit Profile\r\n                        </Typography>\r\n                        <Box\r\n                            component=\"form\"\r\n                            noValidate\r\n                            onSubmit={handleSubmit}\r\n                            sx={{ mt: 3 }}\r\n                        >\r\n\r\n                            <Grid container spacing={1}>\r\n                                <Grid item xs={12} sm={state.isUser ? 6 : 12}>\r\n                                    <TextField\r\n                                        autoComplete=\"given-name\"\r\n                                        name=\"firstName\"\r\n                                        required\r\n                                        fullWidth\r\n                                        id=\"firstName\"\r\n                                        label={state.isUser ? \"First Name\" : \"Organisation representant\"}\r\n                                        value={firstName}\r\n                                        onChange={handleChange}\r\n                                        autoFocus\r\n                                    />\r\n                                </Grid>\r\n                                {state.isUser && (<Grid item xs={12} sm={6}>\r\n                                    <TextField\r\n                                        required\r\n                                        fullWidth\r\n                                        id=\"lastName\"\r\n                                        label=\"Last Name\"\r\n                                        name=\"lastName\"\r\n                                        value={lastName}\r\n                                        onChange={handleChange}\r\n                                        autoComplete=\"family-name\"\r\n                                    />\r\n                                </Grid>)}\r\n                                <Grid item xs={12}>\r\n                                    <TextField\r\n                                        required\r\n                                        fullWidth\r\n                                        id=\"email\"\r\n                                        label=\"Email Address\"\r\n                                        name=\"email\"\r\n                                        value={email}\r\n                                        onChange={handleChange}\r\n                                        autoComplete=\"email\"\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <TextField\r\n                                        required\r\n                                        fullWidth\r\n                                        name=\"password\"\r\n                                        label=\"Password\"\r\n                                        type=\"password\"\r\n                                        id=\"password\"\r\n                                        value={password}\r\n                                        onChange={handleChange}\r\n                                        autoComplete=\"new-password\"\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <TextField\r\n                                        required\r\n                                        fullWidth\r\n                                        name=\"confirmpassword\"\r\n                                        label=\"Confirm Password\"\r\n                                        type=\"password\"\r\n                                        id=\"password\"\r\n                                        value={confirmpassword}\r\n                                        onChange={handleChange}\r\n                                    />\r\n                                </Grid>\r\n                                {!state.isUser && (\r\n                                    <>\r\n                                        <Grid item xs={12} >\r\n                                            <TextField\r\n                                                required\r\n                                                fullWidth\r\n                                                id=\"companyInfo\"\r\n                                                label=\"Organisation Name\"\r\n                                                name=\"companyInfo\"\r\n                                                value={companyInfo}\r\n                                                onChange={handleChange}\r\n                                                autoComplete=\"companyInfo\"\r\n                                                placeholder=\"ex:IT, Bank, Medical...\"\r\n                                            />\r\n                                        </Grid>\r\n\r\n                                        <Grid item xs={12}>\r\n                                            <TextField\r\n                                                required\r\n                                                fullWidth\r\n                                                id=\"address\"\r\n                                                label=\"Organisation Adress\"\r\n                                                name=\"address\"\r\n                                                value={address}\r\n                                                onChange={handleChange}\r\n                                                autoComplete=\"address\"\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid item xs={12}>\r\n                                            <TextField\r\n                                                required\r\n                                                fullWidth\r\n                                                id=\"website\"\r\n                                                label=\"Website\"\r\n                                                name=\"website\"\r\n                                                value={website}\r\n                                                onChange={handleChange}\r\n                                                autoComplete=\"website\"\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid item xs={12} >\r\n                                            <TextField\r\n                                                required\r\n                                                fullWidth\r\n                                                id=\"contact\"\r\n                                                label=\"Contact Email\"\r\n                                                name=\"contact\"\r\n                                                value={contact}\r\n                                                onChange={handleChange}\r\n                                                autoComplete=\"contact\"\r\n                                            />\r\n                                        </Grid>\r\n                                    </>\r\n                                )}\r\n                            </Grid>\r\n                            <Button\r\n                                type=\"submit\"\r\n                                fullWidth\r\n                                variant=\"contained\"\r\n                                sx={{ mt: 3, mb: 2 }}\r\n                            >\r\n                                Update Profile\r\n                            </Button>\r\n                        </Box>\r\n                    </Box>\r\n                </Container>\r\n            </Box>\r\n        </ThemeProvider>\r\n    );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const { loggedIn } = state;\r\n    return { loggedIn: loggedIn };\r\n}\r\n\r\nconst ConnectedEditProfile = connect(mapStateToProps)(EditProfile);\r\n\r\nexport { ConnectedEditProfile as EditProfile };\r\n"]},"metadata":{},"sourceType":"module"}