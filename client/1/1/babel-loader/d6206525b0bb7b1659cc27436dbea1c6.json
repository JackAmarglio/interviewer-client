{"ast":null,"code":"var _jsxFileName = \"G:\\\\projects\\\\2022\\\\2022-1\\\\2022-1-18-Jo\\\\ReactEvents(npm-installed)\\\\client\\\\src\\\\pages\\\\auth\\\\VerifyEmail.js\",\n    _s = $RefreshSig$();\n\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport Box from \"@mui/material/Box\";\nimport Container from \"@mui/material/Container\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport { HeaderBar } from \"../layout/HeaderBar\";\nimport { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { VerifyEmail as verifyEmail } from \"../../utils/auth\";\nimport LoadingIndicator from \"../../components/LoadingIndicator\";\nconst theme = createTheme();\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction VerifyEmail(props) {\n  _s();\n\n  const {\n    dispatch\n  } = props;\n  const history = useHistory();\n  const [hasError, setHasError] = useState(true);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    dispatch(verifyEmail(location.search, (err, message) => {\n      setIsLoading(false);\n\n      if (!err) {\n        toast(\"Successfully Verified!\", {\n          type: \"success\",\n          progress: undefined\n        });\n        history.push('/dashboard');\n        return;\n      } else {\n        toast(message, {\n          type: \"Error\",\n          progress: undefined\n        });\n        setHasError(true);\n        return;\n      }\n    }));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: [isLoading && /*#__PURE__*/_jsxDEV(LoadingIndicator, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        flexGrow: 1,\n        overflowX: \"hidden\"\n      },\n      margin: \"2% 5%\",\n      children: [/*#__PURE__*/_jsxDEV(HeaderBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        component: \"main\",\n        maxWidth: \"xs\",\n        children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            marginTop: 8,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\"\n          },\n          children: [!hasError && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Verifying ...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 38\n          }, this), hasError && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-red\",\n            children: \"Oops! Email Verification Failed!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_s(VerifyEmail, \"lhQtT+0MVSuIeQoyuDCzf+vQfHw=\", false, function () {\n  return [useHistory];\n});\n\n_c = VerifyEmail;\n\nfunction mapStateToProps(state, props) {\n  const {\n    loggedIn,\n    emailConfirmed\n  } = state;\n  return {\n    loggedIn: loggedIn,\n    emailConfirmed: emailConfirmed\n  };\n}\n\nconst ConnectedVerifyEmail = connect(mapStateToProps)(VerifyEmail);\nexport { ConnectedVerifyEmail as VerifyEmail };\n\nvar _c;\n\n$RefreshReg$(_c, \"VerifyEmail\");","map":{"version":3,"sources":["G:/projects/2022/2022-1/2022-1-18-Jo/ReactEvents(npm-installed)/client/src/pages/auth/VerifyEmail.js"],"names":["CssBaseline","Box","Container","createTheme","ThemeProvider","HeaderBar","useState","useEffect","connect","useHistory","VerifyEmail","verifyEmail","LoadingIndicator","theme","toast","props","dispatch","history","hasError","setHasError","isLoading","setIsLoading","location","search","err","message","type","progress","undefined","push","flexGrow","overflowX","marginTop","display","flexDirection","alignItems","mapStateToProps","state","loggedIn","emailConfirmed","ConnectedVerifyEmail"],"mappings":"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","sourcesContent":["import CssBaseline from \"@mui/material/CssBaseline\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Container from \"@mui/material/Container\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport { HeaderBar } from \"../layout/HeaderBar\";\r\nimport { useState,useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {VerifyEmail as verifyEmail} from \"../../utils/auth\";\r\nimport LoadingIndicator from \"../../components/LoadingIndicator\";\r\nconst theme = createTheme();\r\nimport { toast } from 'react-toastify';\r\nfunction VerifyEmail(props) {\r\n    const { dispatch } = props;\r\n    const history = useHistory();\r\n    const [hasError, setHasError] = useState(true);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    useEffect(()=>{\r\n\r\n        dispatch(verifyEmail(location.search,(err,message)=>{\r\n            setIsLoading(false);\r\n            if(!err){\r\n                toast(\"Successfully Verified!\",{\r\n                    type: \"success\",\r\n                    progress: undefined\r\n                });\r\n\r\n                history.push('/dashboard');\r\n                return;\r\n            } else{\r\n                toast(message,{\r\n                    type: \"Error\",\r\n                    progress: undefined\r\n                });\r\n                setHasError(true);\r\n                return;\r\n            }\r\n\r\n        }));\r\n\r\n    },[]);\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            {isLoading && <LoadingIndicator />}\r\n            <Box sx={{ flexGrow: 1, overflowX: \"hidden\" }} margin=\"2% 5%\">\r\n                <HeaderBar />\r\n                <Container component=\"main\" maxWidth=\"xs\">\r\n                    <CssBaseline />\r\n                    <Box\r\n                        sx={{\r\n                            marginTop: 8,\r\n                            display: \"flex\",\r\n                            flexDirection: \"column\",\r\n                            alignItems: \"center\"\r\n                        }}\r\n                    >\r\n                     { !hasError && (<p>Verifying ...</p>) }\r\n                     { hasError && (<p className=\"text-red\">Oops! Email Verification Failed!</p>) }\r\n                    </Box>\r\n                </Container>\r\n            </Box>\r\n        </ThemeProvider>\r\n    );\r\n}\r\n\r\nfunction mapStateToProps(state,props) {\r\n    const { loggedIn,emailConfirmed } = state;\r\n    return { loggedIn: loggedIn,emailConfirmed:emailConfirmed };\r\n\r\n}\r\n\r\nconst ConnectedVerifyEmail = connect(mapStateToProps)(VerifyEmail);\r\n\r\nexport { ConnectedVerifyEmail as VerifyEmail };\r\n"]},"metadata":{},"sourceType":"module"}