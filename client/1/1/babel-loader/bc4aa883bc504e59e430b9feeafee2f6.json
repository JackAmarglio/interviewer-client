{"ast":null,"code":"import axios from \"axios\";\nimport { API_URL } from \"../env\";\n\nfunction _axios() {\n  let bearToken = localStorage.getItem(\"eventBearerToken\");\n  return axios.create({\n    headers: {\n      'Authorization': `EventTracker ${bearToken}`\n    }\n  });\n}\n\nconst IsLoggedIn = () => {\n  return dispatch => {\n    const options = {\n      url: `${API_URL}/auth/loggedin`,\n      method: \"GET\"\n    };\n\n    _axios()(options).then(resp => {\n      dispatch({\n        type: resp.data.loggedIn ? \"LOG_IN\" : \"LOG_OUT\"\n      });\n      console.log(resp.data.emailConfirmed);\n      dispatch({\n        type: \"EMAIL_CONFIRMED\",\n        payload: resp.data.emailConfirmed\n      });\n    });\n  };\n};\n\n_c = IsLoggedIn;\n\nconst LogIn = (data, callback) => {\n  return function (dispatch) {\n    const options = {\n      url: `${API_URL}/auth/login`,\n      method: \"POST\",\n      data: data\n    };\n\n    _axios()(options).then(resp => {\n      localStorage.setItem(\"eventBearerToken\", resp.data.token);\n      dispatch({\n        type: \"LOG_IN\"\n      });\n      dispatch({\n        type: \"EMAIL_CONFIRMED\",\n        payload: resp.emailConfirmed\n      });\n      callback && callback();\n    }).catch(err => {\n      callback && callback(err.response.data.msg);\n    });\n  };\n};\n\n_c2 = LogIn;\n\nconst Register = (data, callback) => {\n  return function (dispatch) {\n    const options = {\n      url: `${API_URL}/auth`,\n      method: \"POST\",\n      data: data\n    };\n\n    _axios()(options).then(resp => {\n      localStorage.setItem(\"eventBearerToken\", resp.data.token);\n      dispatch({\n        type: \"LOG_IN\"\n      });\n    }).catch(err => {\n      callback && callback(err.response.data.msg);\n    }).finally(() => {// callback && callback();\n    });\n  };\n};\n\n_c3 = Register;\n\nconst LogOut = () => {\n  return dispatch => {\n    const options = {\n      url: `${API_URL}/auth/logout`,\n      method: \"GET\"\n    };\n\n    _axios()(options).then(() => {\n      dispatch({\n        type: \"LOG_OUT\"\n      });\n    }).catch(console.error);\n  };\n};\n\n_c4 = LogOut;\n\nconst SendVerifyEmail = callback => {\n  return dispatch => {\n    const options = {\n      url: `${API_URL}/auth/sendVerifyEmail`,\n      method: \"GET\"\n    };\n\n    _axios()(options).then(resp => {\n      if (resp.data.status == 1) {\n        callback && callback(1);\n      } else if (resp.data.status == 2) {\n        callback && callback(2);\n      } else callback && callback(3);\n    }).catch(err => {\n      callback && callback(0, err);\n    });\n  };\n};\n\n_c5 = SendVerifyEmail;\n\nconst VerifyEmail = callback => {\n  return dispatch => {\n    const options = {\n      url: `${API_URL}/auth/verifyEmail`,\n      method: \"GET\"\n    };\n\n    _axios()(options).then(resp => {\n      if (resp.data.status == 1) {\n        callback && callback(1);\n      } else if (resp.data.status == 2) {\n        callback && callback(2);\n      } else callback && callback(3);\n    }).catch(err => {\n      callback && callback(0, err);\n    });\n  };\n};\n\n_c6 = VerifyEmail;\nexport { IsLoggedIn, LogIn, Register, LogOut, SendVerifyEmail, VerifyEmail };\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"IsLoggedIn\");\n$RefreshReg$(_c2, \"LogIn\");\n$RefreshReg$(_c3, \"Register\");\n$RefreshReg$(_c4, \"LogOut\");\n$RefreshReg$(_c5, \"SendVerifyEmail\");\n$RefreshReg$(_c6, \"VerifyEmail\");","map":{"version":3,"sources":["G:/projects/2022/2022-1/2022-1-18-Jo/ReactEvents(npm-installed)/client/src/utils/auth.js"],"names":["axios","API_URL","_axios","bearToken","localStorage","getItem","create","headers","IsLoggedIn","dispatch","options","url","method","then","resp","type","data","loggedIn","console","log","emailConfirmed","payload","LogIn","callback","setItem","token","catch","err","response","msg","Register","finally","LogOut","error","SendVerifyEmail","status","VerifyEmail"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport {API_URL} from \"../env\";\r\n\r\nfunction _axios(){\r\n    let bearToken = localStorage.getItem(\"eventBearerToken\")\r\n    return axios.create({\r\n         headers: {'Authorization': `EventTracker ${bearToken}`}\r\n     });\r\n}\r\nconst IsLoggedIn = () => {\r\n    return (dispatch) => {\r\n\r\n        const options = {\r\n            url: `${API_URL}/auth/loggedin`,\r\n            method: \"GET\"\r\n        };\r\n        _axios()(options).then((resp) => {\r\n            dispatch({ type: resp.data.loggedIn ? \"LOG_IN\" : \"LOG_OUT\" });\r\n            console.log(resp.data.emailConfirmed)\r\n            dispatch({ type: \"EMAIL_CONFIRMED\" , payload: resp.data.emailConfirmed });\r\n        });\r\n    };\r\n};\r\nconst LogIn = (data, callback) => {\r\n    return function (dispatch) {\r\n        const options = {\r\n            url: `${API_URL}/auth/login`,\r\n            method: \"POST\",\r\n            data: data\r\n        };\r\n        _axios()(options)\r\n            .then((resp) => {\r\n                localStorage.setItem(\"eventBearerToken\",resp.data.token);\r\n                dispatch({ type: \"LOG_IN\" });\r\n                dispatch({ type: \"EMAIL_CONFIRMED\", payload: resp.emailConfirmed });\r\n                callback && callback();\r\n            })\r\n            .catch(err=>{\r\n                callback && callback(err.response.data.msg);\r\n            });\r\n    };\r\n};\r\n\r\nconst Register = (data, callback) => {\r\n    return function (dispatch) {\r\n        const options = {\r\n            url: `${API_URL}/auth`,\r\n            method: \"POST\",\r\n            data: data\r\n        };\r\n        _axios()(options)\r\n            .then((resp) => {\r\n                localStorage.setItem(\"eventBearerToken\",resp.data.token);\r\n                dispatch({ type: \"LOG_IN\" });\r\n            })\r\n            .catch(err=>{\r\n                callback && callback(err.response.data.msg);\r\n            }).finally(() => {\r\n                // callback && callback();\r\n            });\r\n    };\r\n};\r\n\r\nconst LogOut = () => {\r\n    return (dispatch) => {\r\n        const options = {\r\n            url: `${API_URL}/auth/logout`,\r\n            method: \"GET\"\r\n        };\r\n        _axios()(options)\r\n            .then(() => {\r\n                dispatch({ type: \"LOG_OUT\" });\r\n            })\r\n            .catch(console.error);\r\n    };\r\n};\r\n\r\nconst SendVerifyEmail = (callback) => {\r\n    return (dispatch) => {\r\n        const options = {\r\n            url: `${API_URL}/auth/sendVerifyEmail`,\r\n            method: \"GET\"\r\n        };\r\n        _axios()(options).then((resp) => {\r\n\r\n            if(resp.data.status == 1){\r\n                callback && callback(1);\r\n            }\r\n            else if(resp.data.status == 2){\r\n                callback && callback(2);\r\n            } else callback && callback(3);\r\n        }).catch(err=>{\r\n            callback && callback(0,err);\r\n        })\r\n    };\r\n};\r\nconst VerifyEmail = (callback) => {\r\n    return (dispatch) => {\r\n        const options = {\r\n            url: `${API_URL}/auth/verifyEmail`,\r\n            method: \"GET\"\r\n        };\r\n        _axios()(options).then((resp) => {\r\n\r\n            if(resp.data.status == 1){\r\n                callback && callback(1);\r\n            }\r\n            else if(resp.data.status == 2){\r\n                callback && callback(2);\r\n            } else callback && callback(3);\r\n        }).catch(err=>{\r\n            callback && callback(0,err);\r\n        })\r\n    };\r\n};\r\n\r\nexport { IsLoggedIn, LogIn, Register, LogOut, SendVerifyEmail,VerifyEmail };\r\n"]},"metadata":{},"sourceType":"module"}