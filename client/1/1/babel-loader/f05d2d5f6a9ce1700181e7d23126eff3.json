{"ast":null,"code":"var _jsxFileName = \"G:\\\\github\\\\interviewer-client\\\\client\\\\src\\\\pages\\\\auth\\\\ForgotPassword.js\",\n    _s = $RefreshSig$();\n\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport { connect } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport { HeaderBar } from \"../layout/HeaderBar\";\nimport { SendResetEmail } from \"../../utils/auth\";\nimport { useHistory } from \"react-router-dom\"; // import LoadingIndicator from \"../../components/LoadingIndicator\";\n\nimport { toast } from 'react-toastify';\nimport * as isEmail from \"is-email\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = createTheme();\n\nfunction ForgotPassword(props) {\n  _s();\n\n  const {\n    loggedIn,\n    dispatch\n  } = props;\n  const [state, setState] = useState({\n    email: \"\"\n  });\n  const [isEmailSent, setIsEmailSent] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleSubmit = function (event) {\n    event.preventDefault();\n\n    if (!isEmail(state.email)) {\n      toast(\"Please input valid email!\", {\n        type: \"warning\"\n      });\n      return;\n    }\n\n    setIsLoading(true);\n    dispatch(SendResetEmail(state, (err, message) => {\n      if (!err) {\n        toast(\"Successfully email sent!\", {\n          type: \"success\"\n        });\n      } else {\n        toast(message, {\n          type: \"error\"\n        });\n      }\n\n      setIsLoading(false);\n    }));\n  };\n\n  const handleChange = function (event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setState({ ...state,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        flexGrow: 1,\n        overflowX: \"hidden\"\n      },\n      margin: \"2% 5%\",\n      children: [/*#__PURE__*/_jsxDEV(HeaderBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        component: \"main\",\n        maxWidth: \"xs\",\n        children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            marginTop: 8,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            sx: {\n              m: 1,\n              bgcolor: \"secondary.main\"\n            },\n            children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            component: \"h1\",\n            variant: \"h5\",\n            children: \"Input Your Email For Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            component: \"form\",\n            noValidate: true,\n            onSubmit: handleSubmit,\n            sx: {\n              mt: 3,\n              width: '100%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  required: true,\n                  fullWidth: true,\n                  name: \"email\",\n                  label: \"User Email\",\n                  type: \"email\",\n                  id: \"email\",\n                  value: state.email,\n                  onChange: handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              fullWidth: true,\n              variant: \"contained\",\n              sx: {\n                mt: 3,\n                mb: 2\n              },\n              children: \"Send Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ForgotPassword, \"96mS+fOe8vI6359laUQQ1g81IQE=\");\n\n_c = ForgotPassword;\n\nfunction mapStateToProps(state) {\n  const {\n    loggedIn\n  } = state;\n  return {\n    loggedIn: loggedIn\n  };\n}\n\nconst ConnectedForgotPassword = connect(mapStateToProps)(ForgotPassword);\nexport { ConnectedForgotPassword as ForgotPassword };\n\nvar _c;\n\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"sources":["G:/github/interviewer-client/client/src/pages/auth/ForgotPassword.js"],"names":["Avatar","Button","CssBaseline","TextField","Grid","Box","LockOutlinedIcon","Typography","Container","createTheme","ThemeProvider","connect","useEffect","useState","HeaderBar","SendResetEmail","useHistory","toast","isEmail","theme","ForgotPassword","props","loggedIn","dispatch","state","setState","email","isEmailSent","setIsEmailSent","isLoading","setIsLoading","handleSubmit","event","preventDefault","type","err","message","handleChange","name","value","target","flexGrow","overflowX","marginTop","display","flexDirection","alignItems","m","bgcolor","mt","width","mb","mapStateToProps","ConnectedForgotPassword"],"mappings":"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","sourcesContent":["import Avatar from \"@mui/material/Avatar\";\r\nimport Button from \"@mui/material/Button\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Container from \"@mui/material/Container\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport { connect } from \"react-redux\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { HeaderBar } from \"../layout/HeaderBar\";\r\nimport { SendResetEmail } from \"../../utils/auth\";\r\nimport { useHistory } from \"react-router-dom\";\r\n// import LoadingIndicator from \"../../components/LoadingIndicator\";\r\nimport { toast } from 'react-toastify';\r\nimport * as isEmail from \"is-email\";\r\nconst theme = createTheme();\r\n\r\nfunction ForgotPassword(props) {\r\n    const { loggedIn, dispatch } = props;\r\n    const [state, setState] = useState({\r\n        email: \"\",\r\n    });\r\n    const [isEmailSent, setIsEmailSent] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const handleSubmit = function (event) {\r\n        event.preventDefault();\r\n        if (!isEmail(state.email)) {\r\n            toast(\"Please input valid email!\", {\r\n                type: \"warning\"\r\n            });\r\n            return;\r\n        }\r\n        setIsLoading(true);\r\n        dispatch(SendResetEmail(state, (err, message) => {\r\n            if (!err) {\r\n                toast(\"Successfully email sent!\", {\r\n                    type: \"success\"\r\n                });\r\n            } else {\r\n                toast(message, {\r\n                    type: \"error\"\r\n                });\r\n            }\r\n            setIsLoading(false)\r\n        }));\r\n    };\r\n\r\n    const handleChange = function (event) {\r\n        const { name, value } = event.target;\r\n        setState({ ...state, [name]: value });\r\n    };\r\n\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            {/* {isLoading && <LoadingIndicator />} */}\r\n            <Box sx={{ flexGrow: 1, overflowX: \"hidden\" }} margin=\"2% 5%\">\r\n                <HeaderBar />\r\n                <Container component=\"main\" maxWidth=\"xs\">\r\n                    <CssBaseline />\r\n                    <Box\r\n                        sx={{\r\n                            marginTop: 8,\r\n                            display: \"flex\",\r\n                            flexDirection: \"column\",\r\n                            alignItems: \"center\"\r\n                        }}\r\n                    >\r\n                        <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\r\n                            <LockOutlinedIcon />\r\n                        </Avatar>\r\n                        <Typography component=\"h1\" variant=\"h5\">\r\n                            Input Your Email For Reset\r\n                        </Typography>\r\n                        <Box\r\n                            component=\"form\"\r\n                            noValidate\r\n                            onSubmit={handleSubmit}\r\n                            sx={{ mt: 3, width: '100%' }}\r\n                        >\r\n                            <Grid container spacing={2}>\r\n                                <Grid item xs={12}>\r\n                                    <TextField\r\n                                        required\r\n                                        fullWidth\r\n                                        name=\"email\"\r\n                                        label=\"User Email\"\r\n                                        type=\"email\"\r\n                                        id=\"email\"\r\n                                        value={state.email}\r\n                                        onChange={handleChange}\r\n                                    />\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n                            <Button\r\n                                type=\"submit\"\r\n                                fullWidth\r\n                                variant=\"contained\"\r\n                                sx={{ mt: 3, mb: 2 }}\r\n                            >\r\n                                Send Email\r\n                            </Button>\r\n                        </Box>\r\n                    </Box>\r\n                </Container>\r\n            </Box>\r\n        </ThemeProvider>\r\n    );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const { loggedIn } = state;\r\n    return { loggedIn: loggedIn };\r\n}\r\n\r\nconst ConnectedForgotPassword = connect(mapStateToProps)(ForgotPassword);\r\n\r\nexport { ConnectedForgotPassword as ForgotPassword };\r\n"]},"metadata":{},"sourceType":"module"}