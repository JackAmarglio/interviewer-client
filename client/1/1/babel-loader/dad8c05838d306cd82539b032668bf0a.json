{"ast":null,"code":"var _jsxFileName = \"G:\\\\github\\\\interviewer-client\\\\client\\\\src\\\\pages\\\\auth\\\\VerifyStatus.js\",\n    _s = $RefreshSig$();\n\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport Box from \"@mui/material/Box\";\nimport Container from \"@mui/material/Container\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport { HeaderBar } from \"../layout/HeaderBar\";\nimport { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { LogIn, Register, SendVerifyEmail } from \"../../utils/auth\";\nimport { toast } from 'react-toastify'; // import LoadingIndicator from \"../../components/LoadingIndicator\";\n\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst theme = createTheme();\n\nfunction VerifyStatus(props) {\n  _s();\n\n  const {\n    dispatch\n  } = props;\n  const [isLoading, setIsLoading] = useState(false);\n  const [isEmailSent, setIsEmailSent] = useState(false);\n  const history = useHistory();\n\n  const sendVerifyEmail = function (event) {\n    setIsLoading(true);\n    dispatch(SendVerifyEmail((status, message) => {\n      setIsLoading(false);\n\n      if (status == 1) {\n        // toast(\"Already You verified email!\",{                    \n        //     type: \"success\"                    \n        // });\n        history.push('/SuccessScreen');\n        window.location.reload();\n      } else if (status == 2) {\n        toast(\"Successfully email sent!\", {\n          type: \"success\"\n        });\n        setIsEmailSent(true);\n      } else if (status == 3) {\n        toast(\"Error while send email!\", {\n          type: \"error\"\n        });\n      } else if (status == 0) {\n        toast(\"Error while send email on API!\", {\n          type: \"error\"\n        });\n      }\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        flexGrow: 1,\n        overflowX: \"hidden\"\n      },\n      margin: \"2% 5%\",\n      children: [/*#__PURE__*/_jsxDEV(HeaderBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        component: \"main\",\n        maxWidth: \"xs\",\n        children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            marginTop: 8,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\"\n          },\n          children: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [\"We have sent you an email, please verify your email \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 79\n            }, this), \"  \", /*#__PURE__*/_jsxDEV(Button, {\n              onClick: sendVerifyEmail,\n              children: \"Resend Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 87\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n\n_s(VerifyStatus, \"c4AR5hhYBlKZl3zrGkj+z6J+A/s=\", false, function () {\n  return [useHistory];\n});\n\n_c = VerifyStatus;\n\nfunction mapStateToProps(state) {\n  const {\n    loggedIn,\n    emailConfirmed\n  } = state;\n  return {\n    loggedIn: loggedIn,\n    emailConfirmed: emailConfirmed\n  };\n}\n\nconst ConnectedVerifyStatus = connect(mapStateToProps)(VerifyStatus);\nexport { ConnectedVerifyStatus as VerifyStatus };\n\nvar _c;\n\n$RefreshReg$(_c, \"VerifyStatus\");","map":{"version":3,"sources":["G:/github/interviewer-client/client/src/pages/auth/VerifyStatus.js"],"names":["Avatar","Button","CssBaseline","Box","Container","createTheme","ThemeProvider","HeaderBar","useState","connect","LogIn","Register","SendVerifyEmail","toast","useHistory","theme","VerifyStatus","props","dispatch","isLoading","setIsLoading","isEmailSent","setIsEmailSent","history","sendVerifyEmail","event","status","message","push","window","location","reload","type","flexGrow","overflowX","marginTop","display","flexDirection","alignItems","mapStateToProps","state","loggedIn","emailConfirmed","ConnectedVerifyStatus"],"mappings":"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","sourcesContent":["import Avatar from \"@mui/material/Avatar\";\r\nimport Button from \"@mui/material/Button\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Container from \"@mui/material/Container\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport { HeaderBar } from \"../layout/HeaderBar\";\r\nimport { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { LogIn, Register, SendVerifyEmail } from \"../../utils/auth\";\r\nimport { toast } from 'react-toastify';\r\n// import LoadingIndicator from \"../../components/LoadingIndicator\";\r\nimport { useHistory } from \"react-router-dom\";\r\nconst theme = createTheme();\r\n\r\nfunction VerifyStatus(props) {\r\n    const { dispatch } = props;\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [isEmailSent, setIsEmailSent] = useState(false);\r\n    const history = useHistory();\r\n    const sendVerifyEmail = function (event) {\r\n        setIsLoading(true);\r\n        dispatch(SendVerifyEmail((status, message) => {\r\n            setIsLoading(false);\r\n            if (status == 1) {\r\n                // toast(\"Already You verified email!\",{                    \r\n                //     type: \"success\"                    \r\n                // });\r\n                history.push('/SuccessScreen');\r\n                window.location.reload();\r\n            } else if (status == 2) {\r\n                toast(\"Successfully email sent!\", {\r\n                    type: \"success\"\r\n                });\r\n                setIsEmailSent(true);\r\n            } else if (status == 3) {\r\n                toast(\"Error while send email!\", {\r\n                    type: \"error\"\r\n                });\r\n            } else if (status == 0) {\r\n                toast(\"Error while send email on API!\", {\r\n                    type: \"error\"\r\n                });\r\n            }\r\n\r\n        }));\r\n    }\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            {/* {isLoading && <LoadingIndicator />} */}\r\n            <Box sx={{ flexGrow: 1, overflowX: \"hidden\" }} margin=\"2% 5%\">\r\n                <HeaderBar />\r\n                <Container component=\"main\" maxWidth=\"xs\">\r\n                    <CssBaseline />\r\n                    <Box\r\n                        sx={{\r\n                            marginTop: 8,\r\n                            display: \"flex\",\r\n                            flexDirection: \"column\",\r\n                            alignItems: \"center\"\r\n                        }}\r\n                    >\r\n                        <>We have sent you an email, please verify your email <br />  <Button onClick={sendVerifyEmail}>Resend Email</Button></>\r\n                    </Box>\r\n                </Container>\r\n            </Box>\r\n        </ThemeProvider>\r\n    );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const { loggedIn, emailConfirmed } = state;\r\n    return { loggedIn: loggedIn, emailConfirmed: emailConfirmed };\r\n}\r\n\r\nconst ConnectedVerifyStatus = connect(mapStateToProps)(VerifyStatus);\r\n\r\nexport { ConnectedVerifyStatus as VerifyStatus };\r\n"]},"metadata":{},"sourceType":"module"}