{"ast":null,"code":"import axios from \"axios\";\nconst environment = process.env[\"REACT_APP_ENVIRONMENT\"];\nconst baseURL = environment === \"server\" ? \"http://localhost:5000\" : \"http://localhost:5000\";\n\nconst IsLoggedIn = () => {\n  return dispatch => {\n    const options = {\n      url: `${baseURL}/auth/loggedin`,\n      method: \"GET\"\n    };\n    axios(options).then(resp => {\n      dispatch({\n        type: resp.data ? \"LOG_IN\" : \"LOG_OUT\"\n      });\n    });\n  };\n};\n\n_c = IsLoggedIn;\n\nconst LogIn = data => {\n  return function (dispatch) {\n    const options = {\n      url: `${baseURL}/auth/login`,\n      method: \"POST\",\n      data: data\n    };\n    axios(options).then(resp => {\n      dispatch({\n        type: \"LOG_IN\"\n      });\n    }).catch(console.error);\n  };\n};\n\n_c2 = LogIn;\n\nconst Register = data => {\n  return function (dispatch) {\n    const options = {\n      url: `${baseURL}/auth`,\n      method: \"POST\",\n      data: data\n    };\n    axios(options).then(() => {\n      dispatch({\n        type: \"LOG_IN\"\n      });\n    }).catch(console.error);\n  };\n};\n\n_c3 = Register;\n\nconst LogOut = () => {\n  return dispatch => {\n    const options = {\n      url: `${baseURL}/auth/logout`,\n      method: \"GET\"\n    };\n    axios(options).then(() => {\n      dispatch({\n        type: \"LOG_OUT\"\n      });\n    }).catch(console.error);\n  };\n};\n\n_c4 = LogOut;\nexport { IsLoggedIn, LogIn, Register, LogOut };\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"IsLoggedIn\");\n$RefreshReg$(_c2, \"LogIn\");\n$RefreshReg$(_c3, \"Register\");\n$RefreshReg$(_c4, \"LogOut\");","map":{"version":3,"sources":["D:/Work/ReactEvents/client/src/utils/auth.js"],"names":["axios","environment","process","env","baseURL","IsLoggedIn","dispatch","options","url","method","then","resp","type","data","LogIn","catch","console","error","Register","LogOut"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,WAAW,GAAGC,OAAO,CAACC,GAAR,CAAY,uBAAZ,CAApB;AACA,MAAMC,OAAO,GACTH,WAAW,KAAK,QAAhB,GACM,uBADN,GAEM,uBAHV;;AAKA,MAAMI,UAAU,GAAG,MAAM;AACrB,SAAQC,QAAD,IAAc;AACjB,UAAMC,OAAO,GAAG;AACZC,MAAAA,GAAG,EAAG,GAAEJ,OAAQ,gBADJ;AAEZK,MAAAA,MAAM,EAAE;AAFI,KAAhB;AAIAT,IAAAA,KAAK,CAACO,OAAD,CAAL,CAAeG,IAAf,CAAqBC,IAAD,IAAU;AAC1BL,MAAAA,QAAQ,CAAC;AAAEM,QAAAA,IAAI,EAAED,IAAI,CAACE,IAAL,GAAY,QAAZ,GAAuB;AAA/B,OAAD,CAAR;AACH,KAFD;AAGH,GARD;AASH,CAVD;;KAAMR,U;;AAYN,MAAMS,KAAK,GAAID,IAAD,IAAU;AACpB,SAAO,UAAUP,QAAV,EAAoB;AACvB,UAAMC,OAAO,GAAG;AACZC,MAAAA,GAAG,EAAG,GAAEJ,OAAQ,aADJ;AAEZK,MAAAA,MAAM,EAAE,MAFI;AAGZI,MAAAA,IAAI,EAAEA;AAHM,KAAhB;AAKAb,IAAAA,KAAK,CAACO,OAAD,CAAL,CACKG,IADL,CACWC,IAAD,IAAU;AACZL,MAAAA,QAAQ,CAAC;AAAEM,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;AACH,KAHL,EAIKG,KAJL,CAIWC,OAAO,CAACC,KAJnB;AAKH,GAXD;AAYH,CAbD;;MAAMH,K;;AAeN,MAAMI,QAAQ,GAAIL,IAAD,IAAU;AACvB,SAAO,UAAUP,QAAV,EAAoB;AACvB,UAAMC,OAAO,GAAG;AACZC,MAAAA,GAAG,EAAG,GAAEJ,OAAQ,OADJ;AAEZK,MAAAA,MAAM,EAAE,MAFI;AAGZI,MAAAA,IAAI,EAAEA;AAHM,KAAhB;AAKAb,IAAAA,KAAK,CAACO,OAAD,CAAL,CACKG,IADL,CACU,MAAM;AACRJ,MAAAA,QAAQ,CAAC;AAAEM,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;AACH,KAHL,EAIKG,KAJL,CAIWC,OAAO,CAACC,KAJnB;AAKH,GAXD;AAYH,CAbD;;MAAMC,Q;;AAeN,MAAMC,MAAM,GAAG,MAAM;AACjB,SAAQb,QAAD,IAAc;AACjB,UAAMC,OAAO,GAAG;AACZC,MAAAA,GAAG,EAAG,GAAEJ,OAAQ,cADJ;AAEZK,MAAAA,MAAM,EAAE;AAFI,KAAhB;AAIAT,IAAAA,KAAK,CAACO,OAAD,CAAL,CACKG,IADL,CACU,MAAM;AACRJ,MAAAA,QAAQ,CAAC;AAAEM,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;AACH,KAHL,EAIKG,KAJL,CAIWC,OAAO,CAACC,KAJnB;AAKH,GAVD;AAWH,CAZD;;MAAME,M;AAcN,SAASd,UAAT,EAAqBS,KAArB,EAA4BI,QAA5B,EAAsCC,MAAtC","sourcesContent":["import axios from \"axios\";\r\n\r\nconst environment = process.env[\"REACT_APP_ENVIRONMENT\"];\r\nconst baseURL =\r\n    environment === \"server\"\r\n        ? \"http://localhost:5000\"\r\n        : \"http://localhost:5000\";\r\n\r\nconst IsLoggedIn = () => {\r\n    return (dispatch) => {\r\n        const options = {\r\n            url: `${baseURL}/auth/loggedin`,\r\n            method: \"GET\"\r\n        };\r\n        axios(options).then((resp) => {\r\n            dispatch({ type: resp.data ? \"LOG_IN\" : \"LOG_OUT\" });\r\n        });\r\n    };\r\n};\r\n\r\nconst LogIn = (data) => {\r\n    return function (dispatch) {\r\n        const options = {\r\n            url: `${baseURL}/auth/login`,\r\n            method: \"POST\",\r\n            data: data\r\n        };\r\n        axios(options)\r\n            .then((resp) => {\r\n                dispatch({ type: \"LOG_IN\" });\r\n            })\r\n            .catch(console.error);\r\n    };\r\n};\r\n\r\nconst Register = (data) => {\r\n    return function (dispatch) {\r\n        const options = {\r\n            url: `${baseURL}/auth`,\r\n            method: \"POST\",\r\n            data: data\r\n        };\r\n        axios(options)\r\n            .then(() => {\r\n                dispatch({ type: \"LOG_IN\" });\r\n            })\r\n            .catch(console.error);\r\n    };\r\n};\r\n\r\nconst LogOut = () => {\r\n    return (dispatch) => {\r\n        const options = {\r\n            url: `${baseURL}/auth/logout`,\r\n            method: \"GET\"\r\n        };\r\n        axios(options)\r\n            .then(() => {\r\n                dispatch({ type: \"LOG_OUT\" });\r\n            })\r\n            .catch(console.error);\r\n    };\r\n};\r\n\r\nexport { IsLoggedIn, LogIn, Register, LogOut };\r\n"]},"metadata":{},"sourceType":"module"}