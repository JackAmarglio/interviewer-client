{"ast":null,"code":"var _jsxFileName = \"G:\\\\projects\\\\2022\\\\2022-1\\\\2022-1-18-Jo\\\\ReactEvents(npm-installed)\\\\client\\\\src\\\\pages\\\\auth\\\\VerifyEmail.js\",\n    _s = $RefreshSig$();\n\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport Box from \"@mui/material/Box\";\nimport Container from \"@mui/material/Container\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport { HeaderBar } from \"../layout/HeaderBar\";\nimport { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { LogIn, Register, VerifyEmail as verifyEmail } from \"../../utils/auth\";\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = createTheme();\n\nfunction VerifyEmail(props) {\n  _s();\n\n  const {\n    dispatch\n  } = props;\n  const [isLoading, setIsLoading] = useState(false);\n  const [isEmailSent, setIsEmailSent] = useState(false);\n\n  const sendVerifyEmail = function (event) {\n    dispatch(verifyEmail((status, message) => {\n      if (status == 1) {\n        toast(\"Already You verified email!\", {\n          type: \"success\"\n        });\n        window.location.reload();\n      } else if (status == 2) {}\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        flexGrow: 1,\n        overflowX: \"hidden\"\n      },\n      margin: \"2% 5%\",\n      children: [/*#__PURE__*/_jsxDEV(HeaderBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        component: \"main\",\n        maxWidth: \"xs\",\n        children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            marginTop: 8,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\"\n          },\n          children: [\"Sorry! You didn't verified Email. Please \", /*#__PURE__*/_jsxDEV(Button, {\n            onClick: sendVerifyEmail,\n            children: \"Verify Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 66\n          }, this), \" to use dashboard page!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n\n_s(VerifyEmail, \"HYk7kOL8xrb3iGwY4yWzNP2WU/g=\");\n\n_c = VerifyEmail;\n\nfunction mapStateToProps(state) {\n  const {\n    loggedIn,\n    emailConfirmed\n  } = state;\n  return {\n    loggedIn: loggedIn,\n    emailConfirmed: emailConfirmed\n  };\n}\n\nconst ConnectedVerifyEmail = connect(mapStateToProps)(VerifyEmail);\nexport { ConnectedVerifyEmail as VerifyEmail };\n\nvar _c;\n\n$RefreshReg$(_c, \"VerifyEmail\");","map":{"version":3,"sources":["G:/projects/2022/2022-1/2022-1-18-Jo/ReactEvents(npm-installed)/client/src/pages/auth/VerifyEmail.js"],"names":["Avatar","Button","CssBaseline","Box","Container","createTheme","ThemeProvider","HeaderBar","useState","connect","LogIn","Register","VerifyEmail","verifyEmail","toast","theme","props","dispatch","isLoading","setIsLoading","isEmailSent","setIsEmailSent","sendVerifyEmail","event","status","message","type","window","location","reload","flexGrow","overflowX","marginTop","display","flexDirection","alignItems","mapStateToProps","state","loggedIn","emailConfirmed","ConnectedVerifyEmail"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,WAAT,EAAsBC,aAAtB,QAA2C,sBAA3C;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,KAAR,EAAeC,QAAf,EAAyBC,WAAW,IAAIC,WAAxC,QAA0D,kBAA1D;AACA,SAASC,KAAT,QAAsB,gBAAtB;;AACA,MAAMC,KAAK,GAAGV,WAAW,EAAzB;;AAEA,SAASO,WAAT,CAAqBI,KAArB,EAA4B;AAAA;;AACxB,QAAM;AAAEC,IAAAA;AAAF,MAAeD,KAArB;AACA,QAAM,CAACE,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACY,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAAC,KAAD,CAA9C;;AACA,QAAMc,eAAe,GAAG,UAASC,KAAT,EAAe;AACnCN,IAAAA,QAAQ,CAACJ,WAAW,CAAC,CAACW,MAAD,EAAQC,OAAR,KAAoB;AACrC,UAAGD,MAAM,IAAE,CAAX,EAAa;AACTV,QAAAA,KAAK,CAAC,6BAAD,EAA+B;AAChCY,UAAAA,IAAI,EAAE;AAD0B,SAA/B,CAAL;AAGAC,QAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACH,OALD,MAKO,IAAGL,MAAM,IAAI,CAAb,EAAe,CAErB;AAEJ,KAVmB,CAAZ,CAAR;AAWH,GAZD;;AAaA,sBACI,QAAC,aAAD;AAAe,IAAA,KAAK,EAAET,KAAtB;AAAA,2BACI,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE;AAAEe,QAAAA,QAAQ,EAAE,CAAZ;AAAeC,QAAAA,SAAS,EAAE;AAA1B,OAAT;AAA+C,MAAA,MAAM,EAAC,OAAtD;AAAA,8BACI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,SAAD;AAAW,QAAA,SAAS,EAAC,MAArB;AAA4B,QAAA,QAAQ,EAAC,IAArC;AAAA,gCACI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,GAAD;AACI,UAAA,EAAE,EAAE;AACAC,YAAAA,SAAS,EAAE,CADX;AAEAC,YAAAA,OAAO,EAAE,MAFT;AAGAC,YAAAA,aAAa,EAAE,QAHf;AAIAC,YAAAA,UAAU,EAAE;AAJZ,WADR;AAAA,+EAQ6C,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAEb,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAR7C;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH;;GArCQV,W;;KAAAA,W;;AAuCT,SAASwB,eAAT,CAAyBC,KAAzB,EAAgC;AAC5B,QAAM;AAAEC,IAAAA,QAAF;AAAWC,IAAAA;AAAX,MAA8BF,KAApC;AACA,SAAO;AAAEC,IAAAA,QAAQ,EAAEA,QAAZ;AAAqBC,IAAAA,cAAc,EAACA;AAApC,GAAP;AACH;;AAED,MAAMC,oBAAoB,GAAG/B,OAAO,CAAC2B,eAAD,CAAP,CAAyBxB,WAAzB,CAA7B;AAEA,SAAS4B,oBAAoB,IAAI5B,WAAjC","sourcesContent":["import Avatar from \"@mui/material/Avatar\";\r\nimport Button from \"@mui/material/Button\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Container from \"@mui/material/Container\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport { HeaderBar } from \"../layout/HeaderBar\";\r\nimport { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {LogIn, Register, VerifyEmail as verifyEmail} from \"../../utils/auth\";\r\nimport { toast } from 'react-toastify';\r\nconst theme = createTheme();\r\n\r\nfunction VerifyEmail(props) {\r\n    const { dispatch } = props;\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [isEmailSent, setIsEmailSent] = useState(false);\r\n    const sendVerifyEmail = function(event){\r\n        dispatch(verifyEmail((status,message) => {\r\n            if(status==1){\r\n                toast(\"Already You verified email!\",{\r\n                    type: \"success\"\r\n                });\r\n                window.location.reload();\r\n            } else if(status == 2){\r\n\r\n            }\r\n\r\n        }));\r\n    }\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <Box sx={{ flexGrow: 1, overflowX: \"hidden\" }} margin=\"2% 5%\">\r\n                <HeaderBar />\r\n                <Container component=\"main\" maxWidth=\"xs\">\r\n                    <CssBaseline />\r\n                    <Box\r\n                        sx={{\r\n                            marginTop: 8,\r\n                            display: \"flex\",\r\n                            flexDirection: \"column\",\r\n                            alignItems: \"center\"\r\n                        }}\r\n                    >\r\n                        Sorry! You didn't verified Email. Please <Button onClick={sendVerifyEmail}>Verify Email</Button> to use dashboard page!\r\n                    </Box>\r\n                </Container>\r\n            </Box>\r\n        </ThemeProvider>\r\n    );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const { loggedIn,emailConfirmed } = state;\r\n    return { loggedIn: loggedIn,emailConfirmed:emailConfirmed };\r\n}\r\n\r\nconst ConnectedVerifyEmail = connect(mapStateToProps)(VerifyEmail);\r\n\r\nexport { ConnectedVerifyEmail as VerifyEmail };\r\n"]},"metadata":{},"sourceType":"module"}