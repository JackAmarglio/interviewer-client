{"ast":null,"code":"import axios from \"axios\";\nconst environment = process.env[\"REACT_APP_ENVIRONMENT\"];\nconst baseURL = environment === \"server\" ? \"http://localhost:5000\" : \"http://localhost:5000\";\n\nconst IsLoggedIn = () => {\n  return dispatch => {\n    const options = {\n      url: `${baseURL}/auth/loggedin`,\n      method: \"GET\"\n    };\n    axios(options).then(resp => {\n      dispatch({\n        type: resp.data.loggedIn ? \"LOG_IN\" : \"LOG_OUT\"\n      });\n      dispatch({\n        type: \"EMAIL_CONFIRMED\",\n        payload: resp.data.emailConfirmed\n      });\n    });\n  };\n};\n\n_c = IsLoggedIn;\n\nconst LogIn = (data, callback) => {\n  return function (dispatch) {\n    const options = {\n      url: `${baseURL}/auth/login`,\n      method: \"POST\",\n      data: data\n    };\n    axios(options).then(resp => {\n      dispatch({\n        type: \"LOG_IN\"\n      });\n      dispatch({\n        type: \"EMAIL_CONFIRMED\",\n        payload: resp.emailConfirmed\n      });\n      callback && callback();\n    }).catch(err => {\n      callback && callback(err.response.data.msg);\n    });\n  };\n};\n\n_c2 = LogIn;\n\nconst Register = (data, callback) => {\n  return function (dispatch) {\n    const options = {\n      url: `${baseURL}/auth`,\n      method: \"POST\",\n      data: data\n    };\n    axios(options).then(() => {\n      dispatch({\n        type: \"LOG_IN\"\n      });\n    }).catch(err => {\n      callback && callback(err.response.data.msg);\n    }).finally(() => {// callback && callback();\n    });\n  };\n};\n\n_c3 = Register;\n\nconst LogOut = () => {\n  return dispatch => {\n    const options = {\n      url: `${baseURL}/auth/logout`,\n      method: \"GET\"\n    };\n    axios(options).then(() => {\n      dispatch({\n        type: \"LOG_OUT\"\n      });\n    }).catch(console.error);\n  };\n};\n\n_c4 = LogOut;\n\nconst VerifyEmail = callback => {\n  return dispatch => {\n    const options = {\n      url: `${baseURL}/auth/verifyEmail`,\n      method: \"GET\"\n    };\n    axios(options).then(resp => {\n      console.log(resp);\n\n      if (resp.status == 1) {\n        callback && callback(1);\n      } else if (resp.status == 2) {\n        callback && callback(2);\n      } else callback && callback(3);\n    }).catch(err => {\n      callback && callback(0, err);\n    });\n  };\n};\n\n_c5 = VerifyEmail;\nexport { IsLoggedIn, LogIn, Register, LogOut, VerifyEmail };\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"IsLoggedIn\");\n$RefreshReg$(_c2, \"LogIn\");\n$RefreshReg$(_c3, \"Register\");\n$RefreshReg$(_c4, \"LogOut\");\n$RefreshReg$(_c5, \"VerifyEmail\");","map":{"version":3,"sources":["G:/projects/2022/2022-1/2022-1-18-Jo/ReactEvents(npm-installed)/client/src/utils/auth.js"],"names":["axios","environment","process","env","baseURL","IsLoggedIn","dispatch","options","url","method","then","resp","type","data","loggedIn","payload","emailConfirmed","LogIn","callback","catch","err","response","msg","Register","finally","LogOut","console","error","VerifyEmail","log","status"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\n\r\nconst environment = process.env[\"REACT_APP_ENVIRONMENT\"];\r\nconst baseURL =\r\n    environment === \"server\"\r\n        ? \"http://localhost:5000\"\r\n        : \"http://localhost:5000\";\r\n\r\nconst IsLoggedIn = () => {\r\n    return (dispatch) => {\r\n        const options = {\r\n            url: `${baseURL}/auth/loggedin`,\r\n            method: \"GET\"\r\n        };\r\n        axios(options).then((resp) => {\r\n            dispatch({ type: resp.data.loggedIn ? \"LOG_IN\" : \"LOG_OUT\" });\r\n            dispatch({ type: \"EMAIL_CONFIRMED\" , payload: resp.data.emailConfirmed });\r\n        });\r\n    };\r\n};\r\n\r\nconst LogIn = (data, callback) => {\r\n    return function (dispatch) {\r\n        const options = {\r\n            url: `${baseURL}/auth/login`,\r\n            method: \"POST\",\r\n            data: data\r\n        };\r\n        axios(options)\r\n            .then((resp) => {\r\n                dispatch({ type: \"LOG_IN\" });\r\n                dispatch({ type: \"EMAIL_CONFIRMED\", payload: resp.emailConfirmed });\r\n                callback && callback();\r\n            })\r\n            .catch(err=>{\r\n                callback && callback(err.response.data.msg);\r\n            });\r\n    };\r\n};\r\n\r\nconst Register = (data, callback) => {\r\n    return function (dispatch) {\r\n        const options = {\r\n            url: `${baseURL}/auth`,\r\n            method: \"POST\",\r\n            data: data\r\n        };\r\n        axios(options)\r\n            .then(() => {\r\n                dispatch({ type: \"LOG_IN\" });\r\n            })\r\n            .catch(err=>{\r\n                callback && callback(err.response.data.msg);\r\n            }).finally(() => {\r\n                // callback && callback();\r\n            });\r\n    };\r\n};\r\n\r\nconst LogOut = () => {\r\n    return (dispatch) => {\r\n        const options = {\r\n            url: `${baseURL}/auth/logout`,\r\n            method: \"GET\"\r\n        };\r\n        axios(options)\r\n            .then(() => {\r\n                dispatch({ type: \"LOG_OUT\" });\r\n            })\r\n            .catch(console.error);\r\n    };\r\n};\r\n\r\nconst VerifyEmail = (callback) => {\r\n    return (dispatch) => {\r\n        const options = {\r\n            url: `${baseURL}/auth/verifyEmail`,\r\n            method: \"GET\"\r\n        };\r\n        axios(options).then((resp) => {\r\n            console.log(resp)\r\n            if(resp.status == 1){\r\n                callback && callback(1);\r\n            }\r\n            else if(resp.status == 2){\r\n                callback && callback(2);\r\n            } else callback && callback(3);\r\n        }).catch(err=>{\r\n            callback && callback(0,err);\r\n        })\r\n    };\r\n};\r\n\r\nexport { IsLoggedIn, LogIn, Register, LogOut, VerifyEmail };\r\n"]},"metadata":{},"sourceType":"module"}