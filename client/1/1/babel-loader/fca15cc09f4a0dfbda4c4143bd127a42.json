{"ast":null,"code":"var _jsxFileName = \"G:\\\\ReactEvents_old\\\\client\\\\src\\\\pages\\\\auth\\\\SignUp.js\",\n    _s = $RefreshSig$();\n\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport Link from \"@mui/material/Link\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport { connect } from \"react-redux\";\nimport { createRef, useEffect, useState } from \"react\";\nimport { HeaderBar } from \"../layout/HeaderBar\";\nimport { Register } from \"../../utils/auth\";\nimport { useHistory } from \"react-router-dom\";\nimport * as isEmail from \"is-email\";\nimport { toast } from 'react-toastify';\nimport LoadingIndicator from \"../../components/LoadingIndicator\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport { SITE_KEY } from '../../env';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = createTheme();\n\nfunction SignUp(props) {\n  _s();\n\n  const {\n    loggedIn,\n    dispatch\n  } = props;\n  const [state, setState] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmpassword: \"\",\n    agreeTerms: false,\n    g_captcha_response: \"\"\n  });\n  const recaptchaRef = /*#__PURE__*/createRef();\n  const [isLoading, setIsLoading] = useState(false);\n  const {\n    firstName,\n    lastName,\n    email,\n    password,\n    confirmpassword\n  } = state;\n\n  const handleSubmit = function (event) {\n    event.preventDefault();\n\n    if (!isEmail(state.email)) {\n      toast(\"Please Input Correct Email!\", {\n        type: \"warning\",\n        progress: undefined\n      });\n      return;\n    }\n\n    if (!state.firstName) {\n      toast(\"Please Input First Name!\", {\n        type: \"warning\",\n        progress: undefined\n      });\n      return;\n    }\n\n    if (!state.lastName) {\n      toast(\"Please Input Last Name!\", {\n        type: \"warning\",\n        progress: undefined\n      });\n      return;\n    }\n\n    if (!state.password) {\n      toast(\"Please Input Password!\", {\n        type: \"warning\",\n        progress: undefined\n      });\n      return;\n    }\n\n    if (state.password != state.confirmpassword) {\n      toast(\"Password mismatch!\", {\n        type: \"warning\"\n      });\n      return;\n    }\n\n    if (!state.agreeTerms) {\n      toast(\"Please select agree terms!\", {\n        type: \"warning\",\n        progress: undefined\n      });\n      return;\n    }\n\n    if (!state.g_captcha_response) {\n      toast(\"Please check what your are not robot!\", {\n        type: \"warning\",\n        progress: undefined\n      });\n      console.log(recaptchaRef);\n      return;\n    }\n\n    setIsLoading(true);\n    dispatch(Register({ ...state,\n      isUser: true\n    }, error => {\n      if (error) {\n        setIsLoading(false);\n        toast(error, {\n          type: \"error\",\n          progress: undefined\n        });\n        return;\n      }\n    }));\n  };\n\n  const agreedTerms = function () {\n    setState({ ...state,\n      agreeTerms: !state.agreeTerms\n    });\n  };\n\n  const handleChange = function (event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setState({ ...state,\n      [name]: value\n    });\n    console.log(state);\n  };\n\n  const onChange = function (value) {\n    setState({ ...state,\n      g_captcha_response: value\n    });\n  };\n\n  const onExpired = function () {\n    setState({ ...state,\n      g_captcha_response: \"\"\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: [isLoading && /*#__PURE__*/_jsxDEV(LoadingIndicator, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        flexGrow: 1,\n        overflowX: \"hidden\"\n      },\n      margin: \"2% 5%\",\n      children: [/*#__PURE__*/_jsxDEV(HeaderBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        component: \"main\",\n        maxWidth: \"xs\",\n        children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            marginTop: 8,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            sx: {\n              m: 1,\n              bgcolor: \"secondary.main\"\n            },\n            children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            component: \"h1\",\n            variant: \"h5\",\n            children: \"Sign up as user\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            component: \"form\",\n            noValidate: true,\n            onSubmit: handleSubmit,\n            sx: {\n              mt: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 6,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  autoComplete: \"given-name\",\n                  name: \"firstName\",\n                  required: true,\n                  fullWidth: true,\n                  id: \"firstName\",\n                  label: \"First Name\",\n                  value: firstName,\n                  onChange: handleChange,\n                  autoFocus: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 6,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  required: true,\n                  fullWidth: true,\n                  id: \"lastName\",\n                  label: \"Last Name\",\n                  name: \"lastName\",\n                  value: lastName,\n                  onChange: handleChange,\n                  autoComplete: \"family-name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  required: true,\n                  fullWidth: true,\n                  id: \"email\",\n                  label: \"Email Address\",\n                  name: \"email\",\n                  value: email,\n                  onChange: handleChange,\n                  autoComplete: \"email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  required: true,\n                  fullWidth: true,\n                  name: \"password\",\n                  label: \"Password\",\n                  type: \"password\",\n                  id: \"password\",\n                  value: password,\n                  onChange: handleChange,\n                  autoComplete: \"new-password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  required: true,\n                  fullWidth: true,\n                  name: \"confirmpassword\",\n                  label: \"ConfirmPassword\",\n                  type: \"password\",\n                  id: \"confirmpassword\",\n                  value: confirmpassword,\n                  onChange: handleChange,\n                  autoComplete: \"confirmpassword\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                  control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                    checked: state.agreeTerms,\n                    name: \"agreeTerms\",\n                    onChange: agreedTerms,\n                    inputProps: {\n                      'aria-label': 'controlled'\n                    },\n                    color: \"primary\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 212,\n                    columnNumber: 45\n                  }, this),\n                  label: \"I have read and agree to the Privacy Policy\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ReCAPTCHA, {\n              sitekey: SITE_KEY,\n              size: \"normal\",\n              onChange: onChange,\n              onExpired: onExpired,\n              ref: recaptchaRef,\n              className: \"recaptcha-container\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              fullWidth: true,\n              variant: \"contained\",\n              sx: {\n                mt: 3,\n                mb: 2\n              },\n              children: \"Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              justifyContent: \"flex-end\",\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  href: \"/signin\",\n                  variant: \"body2\",\n                  children: \"Already have an account? Sign in\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SignUp, \"FeEf0dutyIM6WOTh/seC9PKAkIA=\");\n\n_c = SignUp;\n\nfunction mapStateToProps(state) {\n  const {\n    loggedIn\n  } = state;\n  return {\n    loggedIn: loggedIn\n  };\n}\n\nconst ConnectedSignUp = connect(mapStateToProps)(SignUp);\nexport { ConnectedSignUp as SignUp };\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["G:/ReactEvents_old/client/src/pages/auth/SignUp.js"],"names":["Avatar","Button","CssBaseline","TextField","FormControlLabel","Checkbox","Link","Grid","Box","LockOutlinedIcon","Typography","Container","createTheme","ThemeProvider","connect","createRef","useEffect","useState","HeaderBar","Register","useHistory","isEmail","toast","LoadingIndicator","ReCAPTCHA","SITE_KEY","theme","SignUp","props","loggedIn","dispatch","state","setState","firstName","lastName","email","password","confirmpassword","agreeTerms","g_captcha_response","recaptchaRef","isLoading","setIsLoading","handleSubmit","event","preventDefault","type","progress","undefined","console","log","isUser","error","agreedTerms","handleChange","name","value","target","onChange","onExpired","flexGrow","overflowX","marginTop","display","flexDirection","alignItems","m","bgcolor","mt","mb","mapStateToProps","ConnectedSignUp"],"mappings":"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","sourcesContent":["\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Button from \"@mui/material/Button\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport Link from \"@mui/material/Link\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Container from \"@mui/material/Container\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport { connect } from \"react-redux\";\r\nimport { createRef,useEffect, useState } from \"react\";\r\nimport { HeaderBar } from \"../layout/HeaderBar\";\r\nimport { Register} from \"../../utils/auth\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as isEmail from \"is-email\";\r\nimport { toast } from 'react-toastify';\r\nimport LoadingIndicator from \"../../components/LoadingIndicator\";\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\nimport { SITE_KEY } from '../../env';\r\nconst theme = createTheme();\r\n\r\nfunction SignUp(props) {\r\n    const { loggedIn, dispatch } = props;\r\n    const [state, setState] = useState({\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        confirmpassword:\"\",\r\n        agreeTerms:false,\r\n        g_captcha_response: \"\"\r\n    });\r\n    const recaptchaRef = createRef();\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const { firstName, lastName, email, password, confirmpassword } = state;    \r\n    const handleSubmit = function (event) {\r\n        event.preventDefault();\r\n        if(!isEmail(state.email)){\r\n            toast(\"Please Input Correct Email!\",{\r\n                type: \"warning\",\r\n                progress: undefined\r\n            });\r\n            return;\r\n        }\r\n        if(!state.firstName){\r\n            toast(\"Please Input First Name!\",{\r\n                type: \"warning\",\r\n                progress: undefined\r\n            });\r\n            return;\r\n        }\r\n        if(!state.lastName){\r\n            toast(\"Please Input Last Name!\",{\r\n                type: \"warning\",\r\n                progress: undefined\r\n            });\r\n            return;\r\n        }\r\n        if(!state.password){\r\n            toast(\"Please Input Password!\",{\r\n                type: \"warning\",\r\n                progress: undefined\r\n            });\r\n            return;\r\n        }\r\n        if (state.password != state.confirmpassword) {\r\n            toast(\"Password mismatch!\", {\r\n                type: \"warning\"\r\n            });\r\n            return;\r\n        }\r\n        if(!state.agreeTerms){\r\n            toast(\"Please select agree terms!\",{\r\n                type: \"warning\",\r\n                progress: undefined\r\n            });\r\n            return;\r\n        }\r\n        if(!state.g_captcha_response){\r\n            toast(\"Please check what your are not robot!\",{\r\n                type: \"warning\",\r\n                progress: undefined\r\n            });\r\n            console.log(recaptchaRef)\r\n            return;\r\n        }\r\n        setIsLoading(true);\r\n        dispatch(Register({ ...state, isUser: true }, (error) => {\r\n            if(error){\r\n                setIsLoading(false);\r\n                toast(error,{\r\n                    type: \"error\",\r\n                    progress: undefined\r\n                });\r\n                return;\r\n            }\r\n        }));\r\n    };\r\n    const agreedTerms = function(){\r\n        setState({ ...state, agreeTerms: !state.agreeTerms });\r\n    }\r\n    const handleChange = function (event) {\r\n        const { name, value } = event.target;\r\n        setState({ ...state, [name]: value });\r\n        console.log(state)\r\n    };\r\n    const onChange = function(value) {\r\n        setState({...state,g_captcha_response:value});\r\n    }\r\n    const  onExpired = function(){\r\n        setState({...state,g_captcha_response:\"\"});\r\n    }\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            {isLoading && <LoadingIndicator />}\r\n            <Box sx={{ flexGrow: 1, overflowX: \"hidden\" }} margin=\"2% 5%\">\r\n                <HeaderBar />\r\n                <Container component=\"main\" maxWidth=\"xs\">\r\n                    <CssBaseline />\r\n                    <Box\r\n                        sx={{\r\n                            marginTop: 8,\r\n                            display: \"flex\",\r\n                            flexDirection: \"column\",\r\n                            alignItems: \"center\"\r\n                        }}\r\n                    >\r\n                        <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\r\n                            <LockOutlinedIcon />\r\n                        </Avatar>\r\n                        <Typography component=\"h1\" variant=\"h5\">\r\n                            Sign up as user \r\n                        </Typography>\r\n                        <Box\r\n                            component=\"form\"\r\n                            noValidate\r\n                            onSubmit={handleSubmit}\r\n                            sx={{ mt: 3 }}\r\n                        >\r\n                            <Grid container spacing={2}>\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <TextField\r\n                                        autoComplete=\"given-name\"\r\n                                        name=\"firstName\"\r\n                                        required\r\n                                        fullWidth\r\n                                        id=\"firstName\"\r\n                                        label=\"First Name\"\r\n                                        value={firstName}\r\n                                        onChange={handleChange}\r\n                                        autoFocus\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <TextField\r\n                                        required\r\n                                        fullWidth\r\n                                        id=\"lastName\"\r\n                                        label=\"Last Name\"\r\n                                        name=\"lastName\"\r\n                                        value={lastName}\r\n                                        onChange={handleChange}\r\n                                        autoComplete=\"family-name\"\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <TextField\r\n                                        required\r\n                                        fullWidth\r\n                                        id=\"email\"\r\n                                        label=\"Email Address\"\r\n                                        name=\"email\"\r\n                                        value={email}\r\n                                        onChange={handleChange}\r\n                                        autoComplete=\"email\"\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <TextField\r\n                                        required\r\n                                        fullWidth\r\n                                        name=\"password\"\r\n                                        label=\"Password\"\r\n                                        type=\"password\"\r\n                                        id=\"password\"\r\n                                        value={password}\r\n                                        onChange={handleChange}\r\n                                        autoComplete=\"new-password\"\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <TextField\r\n                                        required\r\n                                        fullWidth\r\n                                        name=\"confirmpassword\"\r\n                                        label=\"ConfirmPassword\"\r\n                                        type=\"password\"\r\n                                        id=\"confirmpassword\"\r\n                                        value={confirmpassword}\r\n                                        onChange={handleChange}\r\n                                        autoComplete=\"confirmpassword\"\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <FormControlLabel\r\n                                        control={\r\n                                            <Checkbox\r\n                                                checked={state.agreeTerms}\r\n                                                name=\"agreeTerms\"\r\n                                                onChange={agreedTerms}\r\n                                                inputProps={{ 'aria-label': 'controlled' }}\r\n                                                color=\"primary\"\r\n                                            />\r\n                                        }\r\n                                        label=\"I have read and agree to the Privacy Policy\"\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                            <ReCAPTCHA\r\n                                sitekey={SITE_KEY}\r\n                                size=\"normal\"\r\n                                onChange={onChange}\r\n                                onExpired={onExpired}\r\n                                ref={recaptchaRef}\r\n                                className=\"recaptcha-container\"\r\n                            />\r\n                            <Button\r\n                                type=\"submit\"\r\n                                fullWidth\r\n                                variant=\"contained\"\r\n                                sx={{ mt: 3, mb: 2 }}\r\n                            >\r\n                                Sign Up\r\n                            </Button>\r\n                            <Grid container justifyContent=\"flex-end\">\r\n                                <Grid item>\r\n                                    <Link href=\"/signin\" variant=\"body2\">\r\n                                        Already have an account? Sign in\r\n                                    </Link>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Box>\r\n                    </Box>\r\n                </Container>\r\n            </Box>\r\n        </ThemeProvider>\r\n    );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const { loggedIn } = state;\r\n    return { loggedIn: loggedIn };\r\n}\r\n\r\nconst ConnectedSignUp = connect(mapStateToProps)(SignUp);\r\n\r\nexport { ConnectedSignUp as SignUp };\r\n"]},"metadata":{},"sourceType":"module"}